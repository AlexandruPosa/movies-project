{"version":3,"sources":["components/mr3.PNG","components/FollowUs.js","components/Footer.js","pages/HomePage/MovieTab.js","pages/HomePage/HomeContent.js","pages/HomePage/CarouselUtils.js","pages/HomePage/Carousel.jsx","pages/HomePage/HomePage.js","components/ContactForm.js","pages/SearchPage/FetchMovies.js","pages/SearchPage/WillPaginate.js","pages/SearchPage/MovieBox.js","pages/SearchPage/GenreFilter.js","pages/SearchPage/YearFilter.js","pages/SearchPage/SearchFilter.js","pages/SearchPage/LanguageFilter.js","pages/SearchPage/CountryFilter.js","pages/SearchPage/RuntimeFilter.js","pages/SearchPage/ImdbRatingFilter.js","pages/SearchPage/SearchPageUtils.js","pages/SearchPage/SearchPage.js","pages/MoviesDetailsPage/MovieDetailsPage.js","components/LogIn/LogIn.js","pages/EditPage/AddPageUtils.js","pages/EditPage/AddPage.js","pages/EditPage/MovieFetchDelete.js","pages/EditPage/DeleteForm.js","pages/EditPage/DeletePage.js","pages/EditPage/MovieFetchUpdate.js","pages/EditPage/EditForm.js","pages/EditPage/EditMovie.js","components/LogIn/LogOut.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FollowUs","className","href","target","rel","icon","faYoutube","size","faFacebook","faTwitter","faInstagram","Footer","state","isLoggedIn","document","cookie","includes","this","setState","to","Fragment","Component","MovieTab","movies","displayMovies","movieYear","newReleases","getNewRelease","movie","parseInt","Year","push","console","log","slice","getTvShows","tvShow","Type","getMovies","justMovie","fetch","then","response","json","totalMovies","results","filter","Poster","Nav","Item","Link","onClick","map","item","class","src","alt","key","_id","Title","Genre","imdbRating","HomeContent","getMoveCssClass","moveRight","moveLeft","disableButtonRight","movieIndex","movieList","length","Carousel","setTimeout","newIndex","imgBackgroundUrl","style","backgroundImage","Home","fetchMovies","url","WillPaginate","props","currentPage","pageNumber","parentFetch","inputContent","newValue","allPagesCount","activePage","totalItemsCount","onChange","handlePageChange","bind","MovieBox","movie_details","Language","Country","Runtime","options","value","label","customStyles","option","provided","color","selectProps","menuColor","borderBottom","padding","height","input","styles","handleChange","selectedGenre","onFilterChange","placeholder","yearInput","onYearChange","SearchFilter","handleOnChange","event","updateInputValue","handleOnEnther","onSearchFilter","titleInput","handleOnclick","type","onKeyDown","aria-hidden","selectedLanguage","onLanguageChange","selectedCountry","onCountryChange","RuntimeFilter","updateRuntimeValue","runtimeValue","onMouseUp","onRuntimeChange","changeEvent","max","variant","ImdbRatingFilter","updateImdbRatingValue","imdbRatingValue","onImdbRatingChange","step","generateUrl","filters","searchQuery","Object","keys","reduce","acc","filterValue","join","Search","resetAllFilters","inputYearContent","active","isLoaded","pageCount","pagination","numberOfPages","updateDictionary","filterOption","skip","prevState","handleOnSearchChangeValue","inputValue","handleOnSearchChange","loading","handleGenreChange","handleYearChange","query","handleLanguageChange","handleCountryChange","handleRuntimeChangeValue","handleRuntimeChange","selectedRuntime","handleImdbRantingChangeValue","handleImdbRatingChange","message","currentState","index","movie_index","Details","link","search","location","split","id","rightLink","imdbVotes","imdbID","LogIn","signUpUsername","signUpPassword","logInUsername","logInPassword","signUpMessage","logInMessage","formState","authtenticationState","onSubmitSignUp","data","onSubmitLogIn","handleChangeFormState","name","redirectOnAuthtentication","resp","accessToken","history","window","reload","handleSubmitSignUp","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","username","password","authenticated","preventDefault","handleSubmitLogIn","startsWith","onSubmit","required","addMovie","token","find","element","Add","ImdbVotes","ImdbRating","submitHandler","createData","changeHandler","md","htmlFor","createMovieDelete","res","catch","err","DeleteForm","handleDeleteOnClick","searchedMovieResult","noValidate","Delete","searchedMovieDictionary","showForm","_onSelect","returnedMovieObject","allInfo","serverData","onSelect","record","inputBoxBorderColor","fuseConfigs","threshold","createMovieUpdate","EditForm","selectedMovie","e","handleFetchOnClick","EditMovie","LogOutButton","useHistory","some","trim","Navigation","editMovie","Navbar","bg","expand","Brand","exact","require","Toggle","aria-controls","Collapse","activeClassName","marginLeft","fontSize","NavDropdown","title","children","App","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"mfAAAA,EAAOC,QAAU,IAA0B,iC,6KCY5B,SAASC,IACtB,OACE,yBAAKC,UAAU,mBACb,uBACEC,KAAK,0BACLC,OAAO,SACPC,IAAI,sBACJH,UAAU,kBAEV,kBAAC,IAAD,CAAiBI,KAAMC,IAAWC,KAAK,QAEzC,uBACEL,KAAK,2BACLC,OAAO,SACPC,IAAI,sBACJH,UAAU,mBAEV,kBAAC,IAAD,CAAiBI,KAAMG,IAAYD,KAAK,QAE1C,uBACEL,KAAK,sBACLC,OAAO,SACPC,IAAI,sBACJH,UAAU,kBAEV,kBAAC,IAAD,CAAiBI,KAAMI,IAAWF,KAAK,QAEzC,uBACEL,KAAK,4BACLC,OAAO,SACPC,IAAI,sBACJH,UAAU,oBAEV,kBAAC,IAAD,CAAiBI,KAAMK,IAAaH,KAAK,S,ICqClCI,E,4MA3EbC,MAAQ,CACNC,YAAY,G,kEAIAC,SAASC,OACXC,SAAS,UACjBC,KAAKC,SAAS,CAAEL,YAAY,M,+BAK9B,OACE,yBAAKZ,UAAU,uBACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,aACb,2CAEF,yBAAKA,UAAU,oBACb,0DACA,gEACA,oDACA,6CAGJ,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,aACb,0CAEF,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMkB,GAAI,IAAKlB,UAAU,kBACtB,IACD,oCAEF,kBAAC,IAAD,CAAMkB,GAAI,gBAAiBlB,UAAU,kBAClC,IACD,4CAEF,kBAAC,IAAD,CAAMkB,GAAI,cAAelB,UAAU,kBAChC,IACD,8CAEDgB,KAAKL,MAAMC,WACV,kBAAC,IAAMO,SAAP,KACE,kBAAC,IAAD,CAAMD,GAAI,iBAAkBlB,UAAU,kBACnC,IACD,yCAEF,kBAAC,IAAD,CAAMkB,GAAI,oBAAqBlB,UAAU,kBACtC,IACD,4CAEF,kBAAC,IAAD,CAAMkB,GAAI,kBAAmBlB,UAAU,kBACpC,IACD,2CAGF,OAGR,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,aACb,0CAEF,yBAAKA,UAAU,oBACb,6BACE,kBAACD,EAAD,c,GAnEOqB,a,gBCuHNC,E,4MAzHbV,MAAQ,CACNW,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,I,EAGfC,cAAgB,WACd,IADoB,EACdD,EAAc,GADA,cAGF,EAAKd,MAAMW,QAHT,IAGpB,2BAAqC,CAAC,IAA7BK,EAA4B,QAC/BC,SAASD,EAAME,MAAQ,MACzBJ,EAAYK,KAAKH,IALD,8BAQpBI,QAAQC,IAAIP,GACZ,EAAKR,SAAS,CACZM,cAAeE,EAAYQ,MAAM,EAAG,O,EAIxCC,WAAa,WACX,IADiB,EACXC,EAAS,GADE,cAEC,EAAKxB,MAAMW,QAFZ,IAEjB,2BAAqC,CAAC,IAA7BK,EAA4B,QAChB,WAAfA,EAAMS,MACRD,EAAOL,KAAKH,GAEd,EAAKV,SAAS,CACZM,cAAeY,EAAOF,MAAM,EAAG,OAPlB,gC,EAYnBI,UAAY,WACV,IADgB,EACVC,EAAY,GADF,cAEE,EAAK3B,MAAMW,QAFb,IAEhB,2BAAqC,CAAC,IAA7BK,EAA4B,QAChB,UAAfA,EAAMS,MACRE,EAAUR,KAAKH,GAEjB,EAAKV,SAAS,CACZM,cAAee,EAAUL,MAAM,EAAG,OAPtB,gC,kEAWG,IAAD,OAClBM,MAAM,0DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAEL,IAAMC,EAAcD,EAAKE,QAAQC,QAAO,SAAClB,GAAD,OAAWA,EAAMmB,UACzD,EAAK7B,SAAS,CACZK,OAAQqB,EACRpB,cAAeoB,EAAYV,MAAM,EAAG,IACpCT,UAAWkB,EAAKE,QAAQf,Y,+BAK9B,OACE,yBAAK7B,UAAU,aACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,0CAEF,kBAAC+C,EAAA,EAAD,CAAK/C,UAAU,yBACb,kBAAC+C,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAUhD,KAAK,IAAIiD,QAASlC,KAAKU,eAAjC,iBAIF,kBAACqB,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAUhD,KAAK,IAAIiD,QAASlC,KAAKqB,WAAjC,WAIF,kBAACU,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAUhD,KAAK,IAAIiD,QAASlC,KAAKkB,YAAjC,iBAQV,yBAAKlC,UAAU,OACZgB,KAAKL,MAAMY,cAAc4B,KAAI,SAACC,GAAD,OAC5B,yBAAKC,MAAM,4BACT,yBAAKrD,UAAU,oBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,QACVsD,IAAKF,EAAKN,OACVS,IAAI,GACJC,IAAKJ,EAAKK,OAGd,yBAAKzD,UAAU,mBACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBAAqBoD,EAAKM,OACxC,8BAAON,EAAKO,OACZ,yBAAK3D,UAAU,oBACb,2BAAIoD,EAAKQ,YACT,yBAAK5D,UAAU,oBACZoD,EAAKvB,KAAO,KAAO,2BAAIuB,EAAKvB,MAAY,qB,GA3G5CT,aCYRyC,E,4MAXblD,MAAQ,G,uDAEN,OACE,yBAAKX,UAAU,2BACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,mB,GANGoB,a,OCHnB,SAAS0C,EAAgBC,EAAWC,GACzC,OAAID,EACK,8BAELC,EACK,6BAEF,GASF,SAASC,EAAmBC,EAAYC,GAC7C,OAAIA,EAAUC,OAAS,IAAMF,EACpB,+BAEF,G,ICwGMG,E,4MAjHb1D,MAAQ,CACNW,OAAQ,GACRC,cAAe,GACfwC,WAAW,EACXC,UAAU,EACVE,WAAY,G,EAedH,UAAY,WACV,EAAK9C,SAAS,CAAE8C,WAAW,IAC3BO,YAAW,WACT,IAAMC,EAAW,EAAK5D,MAAMuD,WAAa,EACzC,EAAKjD,SAAS,CACZiD,WAAYK,EACZhD,cAAe,EAAKZ,MAAMW,OAAOW,MAAMsC,EAAUA,EAAW,GAC5DR,WAAW,MAEZ,M,EAELC,SAAW,WACT,EAAK/C,SAAS,CAAE+C,UAAU,IAC1BM,YAAW,WACT,IAAMC,EAAW,EAAK5D,MAAMuD,WAAa,EACzC,EAAKjD,SAAS,CACZiD,WAAYK,EACZhD,cAAe,EAAKZ,MAAMW,OAAOW,MAAMsC,EAAUA,EAAW,GAC5DP,UAAU,MAEX,M,kEAhCgB,IAAD,OAClBzB,MAAM,0DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAEL,IAAMC,EAAcD,EAAKE,QAAQC,QAAO,SAAClB,GAAD,OAAWA,EAAMmB,UACzD,EAAK7B,SAAS,CACZK,OAAQqB,EACRpB,cAAeoB,EAAYV,MAAM,EAAG,U,+BA4B1C,ID7C8BiC,EAaRH,EAAWC,ECgC7BQ,EACFxD,KAAKL,MAAMW,OAAON,KAAKL,MAAMuD,aAC7BlD,KAAKL,MAAMW,OAAON,KAAKL,MAAMuD,YAAYpB,OAC3C,OACE,yBAAK9C,UAAU,wCACb,yBACEA,UAAS,qCDtCO+D,ECuCd/C,KAAKL,MAAMoD,UDvCcC,ECwCzBhD,KAAKL,MAAMqD,SDvCjBD,GAAaC,EAAiB,sBAE3B,KCuCCV,IAAKkB,EACLjB,IAAI,KAEN,yBACEkB,MAAO,CAAEC,gBAAgB,OAAD,OAAS1D,KAAKL,MAAMY,cAAc,GAAlC,MACxBvB,UAAU,6BAEV,yBAAKA,UAAU,oCACb,6CACA,yBAAKA,UAAU,uBACb,uBACEA,UAAS,mCDlESkE,ECmEhBlD,KAAKL,MAAMuD,WACXlD,KAAKL,MAAMW,ODnER,IAAf4C,EACK,+BAEF,KCkEOhB,QAASlC,KAAKgD,UAEb,KAEH,uBACEhE,UAAS,mCAA8BiE,EACrCjD,KAAKL,MAAMuD,WACXlD,KAAKL,MAAMW,SAEb4B,QAASlC,KAAK+C,WAEb,OAIP,yBAAK/D,UAAU,gCACb,yBACEA,UAAS,wCAAmC8D,EAC1C9C,KAAKL,MAAMoD,UACX/C,KAAKL,MAAMqD,YAGZhD,KAAKL,MAAMY,cAAc4B,KAAI,SAACC,GAAD,OAC5B,yBAAKI,IAAKJ,EAAKK,IAAKzD,UAAU,wBAC5B,yBACEsD,IAAKF,EAAKN,OACV9C,UAAU,2BACVuD,IAAI,KAEN,uBAAGvD,UAAU,8BAA8BoD,EAAKM,OAChD,uBAAG1D,UAAU,8BAA8BoD,EAAKO,OAChD,uBAAG3D,UAAU,+BACVoD,EAAKQ,wB,GAtGHxC,aCWRuD,G,OCnBWvD,Y,8KDQtB,OACE,kBAAC,IAAMD,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,W,GAPWC,cELZ,SAASwD,IAAkC,IAAtBC,EAAqB,uDAFtC,+CAKP,OAAOtC,MAAMsC,GAAKrC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,mCCC3BoC,G,+DACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDpE,MAAQ,CACXqE,YAAa,EAAKD,MAAMC,aAHT,E,yEAQyB,IAAhBA,EAAe,EAAfA,YAC1BhE,KAAKC,SAAL,eAAmBD,KAAKL,MAAxB,CAA+BqE,mB,uCAGhBC,GACfjE,KAAKC,SAAS,CAAE+D,YAAaC,IAC7BjE,KAAK+D,MAAMG,YAAYlE,KAAK+D,MAAMI,aAAcnE,KAAK+D,MAAMK,SAAyB,IAAfH,EAAmB,EAAkB,GAAbA,EAAkB,M,+BAK/G,OACE,6BAEE,kBAAC,IAAD,CACEI,cAAerE,KAAKL,MAAM0E,cAC1BC,WAAYtE,KAAKL,MAAMqE,YACvBO,gBAAiBvE,KAAK+D,MAAMQ,gBAC5BC,SAAUxE,KAAKyE,iBAAiBC,KAAK1E,a,GA3BLI,cCqC3BuE,G,8KA7BP,OAAO,yBAAK3F,UAAU,4BAClB,uBAAGA,UAAU,eAAegB,KAAK+D,MAAMa,cAAclC,OACrD,yBAAK1D,UAAU,yBAAyBsD,IAAKtC,KAAK+D,MAAMa,cAAc9C,SACtE,uBAAG9C,UAAU,eAAc,0BAAMA,UAAU,gBAAhB,WAA8CgB,KAAK+D,MAAMa,cAAcjC,OAClG,uBAAG3D,UAAU,cAAcgB,KAAK+D,MAAMa,cAAc/D,MACpD,yBAAK7B,UAAU,sBACX,uBAAGA,UAAU,mBAAb,cACA,uBAAGA,UAAU,oBAAb,aACA,uBAAGA,UAAU,mBAAb,cAEJ,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,kBAAkBgB,KAAK+D,MAAMa,cAAcC,UACxD,uBAAG7F,UAAU,iBAAiBgB,KAAK+D,MAAMa,cAAcE,SACvD,uBAAG9F,UAAU,iBAAiBgB,KAAK+D,MAAMa,cAAcG,UAE3D,uBAAG/F,UAAU,wBAAuB,0BAAMA,UAAU,uBAA6BgB,KAAK+D,MAAMa,cAAchC,YAG1G,yBAAK5D,UAAU,+BACX,kBAAC,IAAD,CAAMkB,GAAI,qBAAuBF,KAAK+D,MAAMa,cAAcnC,KAAK,4BAAQzD,UAAU,sBAAlB,uB,GAzBxDoB,c,QCFjB4E,G,OAAU,CACd,CAAEC,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,UAAWC,MAAO,aAEvBC,EAAe,CACnBC,OAAQ,SAACC,EAAU1F,GAAX,sBACH0F,EADG,CAENC,MAAO3F,EAAM4F,YAAYC,UACzBC,aAAc,mBAIdC,QAAS,GACTC,OAAQ,MAGVC,MAAO,SAAAC,GAAM,sBACRA,KAiCQlD,E,4MA1BbmD,aAAe,SAACC,GAEd,EAAKhC,MAAMiC,eAAeD,I,uDAIlB,IAEAA,EAAkB/F,KAAK+D,MAAvBgC,cAER,OACE,yBAAK/G,UAAU,mBACb,kBAAC,IAAD,CACEiG,MAAOc,EACPE,YAAY,iBACZzB,SAAUxE,KAAK8F,aACfd,QAASA,EACTa,OAAQV,S,GApBE/E,aCrBLS,G,8KAVP,OAEI,yBAAK7B,UAAU,kBACX,2BAAOA,UAAU,aAAaiG,MAAOjF,KAAK+D,MAAMmC,UAAWD,YAAY,eAAezB,SAAUxE,KAAK+D,MAAMoC,oB,GARxG/F,cC6BJgG,G,mNA1BXC,eAAiB,SAACC,GACd,EAAKvC,MAAMwC,iBAAiBD,EAAMpH,OAAO+F,Q,EAG7CuB,eAAiB,SAACF,GACI,UAAdA,EAAM9D,KACN,EAAKuB,MAAM0C,eAAe,EAAK1C,MAAM2C,a,EAI7CC,cAAgB,WACZ,EAAK5C,MAAM0C,eAAe,EAAK1C,MAAM2C,a,uDAIrC,OAEI,yBAAK1H,UAAU,mBACX,2BAAOA,UAAU,eAAe4H,KAAK,OAAO3B,MAAOjF,KAAK+D,MAAM2C,WAAYT,YAAY,sBAAsBzB,SAAUxE,KAAKqG,eAAgBQ,UAAW7G,KAAKwG,iBAC3J,uBAAGxH,UAAU,2BAA2B8H,cAAY,OAAO5E,QAASlC,KAAK2G,qB,GArB9DvG,cCCrB4E,G,OAAU,CACZ,CAAEC,MAAO,UAAWC,MAAO,WAE3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,WAAYC,MAAO,YAI5B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,WAAYC,MAAO,cAI1BC,EAAe,CACjBC,OAAQ,SAACC,EAAU1F,GAAX,sBACD0F,EADC,CAEJI,aAAc,mBAEdC,QAAS,GACTC,OAAQ,MAEZC,MAAO,SAAAC,GAAM,sBACNA,KAgCIhB,E,4MAzBXiB,aAAe,SAACiB,GAEZ,EAAKhD,MAAMiD,iBAAiBD,I,uDAItB,IAEEA,EAAqB/G,KAAK+D,MAA1BgD,iBAER,OACI,yBAAK/H,UAAU,sBACX,kBAAC,IAAD,CACIiG,MAAO8B,EACPd,YAAY,oBACZzB,SAAUxE,KAAK8F,aACfd,QAASA,EACTa,OAAQV,S,GApBL/E,aC5BjB4E,G,OAAU,CACZ,CAAEC,MAAO,SAAUC,MAAO,UAE1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,UAAWC,MAAO,aAQzBC,EAAe,CACjBC,OAAQ,SAACC,EAAU1F,GAAX,sBACD0F,EADC,CAEJI,aAAc,mBAEdC,QAAS,GACTC,OAAQ,MAEZC,MAAO,SAAAC,GAAM,sBACNA,KAgCIf,E,4MAzBXgB,aAAe,SAACmB,GAEZ,EAAKlD,MAAMmD,gBAAgBD,I,uDAIrB,IAEEA,EAAoBjH,KAAK+D,MAAzBkD,gBAER,OACI,yBAAKjI,UAAU,qBACX,kBAAC,IAAD,CACIiG,MAAOgC,EACPhB,YAAY,mBACZzB,SAAUxE,KAAK8F,aACfd,QAASA,EACTa,OAAQV,S,GApBN/E,a,+BC1BT+G,EAAb,4MAEId,eAAiB,SAACpB,GACd,EAAKlB,MAAMqD,mBAAmBnC,IAHtC,uDAKc,IAAD,OACGoC,EAAiBrH,KAAK+D,MAAtBsD,aAER,OACI,yBAAKrI,UAAU,oBAAoBsI,UAAW,WAAQ,EAAKvD,MAAMwD,gBAAgBF,KAC7E,4CACA,kBAAC,IAAD,CACIpC,MAAOoC,EACP7C,SAAU,SAAAgD,GAAW,OAAI,EAAKnB,eAAemB,EAAYtI,OAAO+F,QAChEwC,IAAK,IACLC,QAAQ,gBAf5B,GAAmCtH,aCCtBuH,G,OAAb,4MAEItB,eAAiB,SAACpB,GACd,EAAKlB,MAAM6D,sBAAsB3C,IAHzC,uDAKc,IAAD,OAEG4C,EAAoB7H,KAAK+D,MAAzB8D,gBAER,OACI,yBAAK7I,UAAU,mBAAmBsI,UAAW,WAAQ,EAAKvD,MAAM+D,mBAAmBD,KAC/E,qCACA,kBAAC,IAAD,CACI5C,MAAO4C,EACPrD,SAAU,SAAAgD,GAAW,OAAI,EAAKnB,eAAemB,EAAYtI,OAAO+F,QAChEwC,IAAK,GACLM,KAAM,GACNL,QAAQ,gBAjB5B,GAAsCtH,cCK/B,SAAS4H,EAAYC,GACxB,IAAIpE,EAAM,+CAEJqE,EAAcC,OAAOC,KAAKH,GAASI,QAAO,SAACC,EAAK9F,GAClD,IAAM+F,EAAcN,EAAQzF,GAK5B,OAJI+F,GACAD,EAAIxH,KAAJ,UAAY0B,EAAZ,YAAmB+F,IAGhBD,IACR,IAAIE,KAAK,KAKZ,OAJIN,IACArE,EAAMA,EAAM,IAAMqE,GAEtBnH,QAAQC,IAAI6C,GACLA,E,ICiSI4E,E,kDA5Sb,WAAY1E,GAAQ,IAAD,8BACjB,cAAMA,IAgCR2E,gBAAkB,WAChB,EAAKzI,SACH,CACE8F,cAAe,KACfgB,iBAAkB,KAClBE,gBAAiB,KACjB0B,iBAAkB,GAClBxE,aAAc,GACdkD,aAAc,EACdQ,gBAAiB,EACjBe,QAAQ,EACRX,QAAS,CACPvF,MAAO,GACPC,MAAO,GACP9B,KAAM,GACNgE,SAAU,GACVC,QAAS,GACTC,QAAS,GACTnC,WAAY,MAGhB,WACE7B,QAAQC,IAAI,kBAAmB,EAAKrB,OAGpCiE,EADYoE,EAAY,EAAKrI,MAAMsI,UAClBzG,MAAK,SAACE,GACrB,EAAKzB,SAAS,CACZ4I,UAAU,EACVvI,OAAQoB,EAAKE,QACbkH,UAAWpH,EAAKqH,WAAWC,cAC3BhF,YAAatC,EAAKqH,WAAW/E,YAC7BO,gBACE7C,EAAKE,QAAQwB,OAAS1B,EAAKqH,WAAWC,uBAjE/B,EAyEnBC,iBAAmB,SAACC,EAAc9E,GAAyB,IAAf+E,EAAc,uDAAP,GAEjD,EAAKlJ,UACH,SAACmJ,GAAc,IAELnB,EAAYmB,EAAZnB,QAMR,OAJAA,EAAQiB,GAAgB9E,EACxB6D,EAAO,KAAWkB,EAElBpI,QAAQC,IAAIiH,GACL,CAAEA,cAGX,WACElH,QAAQC,IAAI,uBACZD,QAAQC,IAAI,EAAKrB,MAAMsI,SACvBlH,QAAQC,IAAI,QAGZ,IAAI6C,EAAMmE,EAAY,EAAKrI,MAAMsI,SAEjClH,QAAQC,IAAI,MAAO6C,GAEnBD,EAAYC,GAAKrC,MAAK,SAACE,GACrBX,QAAQC,IAAI,yBAA0BU,GAEtC,EAAKzB,SAAS,CACZ4I,UAAU,EACVvI,OAAQoB,EAAKE,QACbkH,UAAWpH,EAAKqH,WAAWC,cAC3BhF,YAAatC,EAAKqH,WAAW/E,YAC7BO,gBACE7C,EAAKE,QAAQwB,OAAS1B,EAAKqH,WAAWC,cACxC3E,cAAe3C,EAAKqH,WAAWC,cAC/BJ,QAAQ,IAEV7H,QAAQC,IAAI,YAAa,EAAKrB,MAAM0E,kBAKzB,KAAT8E,IACF,EAAKlJ,SAAS,CACZ+D,YAAa,IAEfjD,QAAQC,IAAI,yBAA0B,EAAKrB,MAAMqE,kBAvHtC,EA6HnBqF,0BAA4B,SAACC,GAC3B,EAAKrJ,SAAS,CACZkE,aAAcmF,KA/HC,EAmInBC,qBAAuB,SAACD,GACtB,EAAKrJ,SAAS,CAAEkE,aAAcmF,EAAYE,SAAS,IAGnD,EAAKP,iBAAiB,QAASK,IAvId,EA0InBG,kBAAoB,SAAC1D,GAEnB,EAAKkD,iBAAiB,QAASlD,EAAcd,OAC7C,EAAKhF,SAAS,CAAE8F,mBA7IC,EAgJnB2D,iBAAmB,SAACpD,GAClB,IAAMqD,EAAQrD,EAAMpH,OAAO+F,MAC3B,EAAKhF,SAAS,CAAE0I,iBAAkBgB,EAAOH,SAAS,IAGlD,EAAKP,iBAAiB,OAAQU,IArJb,EAwJnBC,qBAAuB,SAAC7C,GAEtB,EAAKkC,iBAAiB,WAAYlC,EAAiB9B,OACnD,EAAKhF,SAAS,CAAE8G,sBA3JC,EA8JnB8C,oBAAsB,SAAC5C,GAErB,EAAKgC,iBAAiB,UAAWhC,EAAgBhC,OACjD,EAAKhF,SAAS,CAAEgH,qBAjKC,EAoKnB6C,yBAA2B,SAACzC,GAC1B,EAAKpH,SAAS,CACZoH,kBAtKe,EA0KnB0C,oBAAsB,SAACvC,GACrB,IAAIwC,EAAkBxC,EAAc,OAGpC,EAAKyB,iBAAiB,UAAWe,IA9KhB,EAiLnBC,6BAA+B,SAACpC,GAC9B,EAAK5H,SAAS,CACZ4H,qBAnLe,EAsLnBqC,uBAAyB,SAAC1C,GAExB,EAAKyB,iBAAiB,aAAczB,IAtLpC,EAAK7H,MAAQ,CACXoG,cAAe,KACfgB,iBAAkB,KAClBE,gBAAiB,KACjB9C,aAAc,GACdwE,iBAAkB,GAClBjC,WAAY,GACZW,aAAc,EACdQ,gBAAiB,EACjBvH,OAAQ,GACRuI,UAAU,EACVW,SAAS,EACTW,QAAS,GACTrB,UAAW,EACX9E,YAAa,EACbO,gBAAiB,EACjBF,cAAe,EACfuE,QAAQ,EACRX,QAAS,CACPvF,MAAO,GACPC,MAAO,GACP9B,KAAM,GACNgE,SAAU,GACVC,QAAS,GACTC,QAAS,GACTnC,WAAY,GACZuG,KAAM,KA5BO,E,gEA2LE,IAAD,OAClBpI,QAAQC,IAAI,WAEZ4C,IAAcpC,MAAK,SAACE,GAClBX,QAAQC,IAAIU,GAEZ,EAAKzB,SAAS,CACZ4I,UAAU,EACVvI,OAAQoB,EAAKE,QACbkH,UAAWpH,EAAKqH,WAAWC,cAC3BhF,YAAatC,EAAKqH,WAAW/E,YAC7BO,gBAAiB7C,EAAKE,QAAQwB,OAAS1B,EAAKqH,WAAWC,cACvD3E,cAAe3C,EAAKqH,WAAWC,qB,oCAKnC,IAAMoB,EAAepK,KAAKL,MAAMiJ,OAChC5I,KAAKC,SAAS,CAAE2I,QAASwB,M,+BAGjB,IAAD,EACsBpK,KAAKL,MAA1BkJ,EADD,EACCA,SAAUvI,EADX,EACWA,OACQN,KAAKL,MAAvB0E,cAOR,OAAKwE,EAID,yBAAK7J,UAAU,yBACb,kBAAC,EAAD,CACE0H,WAAY1G,KAAKL,MAAMwE,aACvBsC,eAAgBzG,KAAKuJ,qBACrBhD,iBAAkBvG,KAAKqJ,4BAEzB,yBAAKrK,UAAU,WACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CACEgH,eAAgBhG,KAAKyJ,kBACrB1D,cAAe/F,KAAKL,MAAMoG,gBAE5B,kBAAC,EAAD,CACEI,aAAcnG,KAAK0J,iBACnBxD,UAAWlG,KAAKL,MAAMgJ,mBAExB,kBAAC,EAAD,CACE3B,iBAAkBhH,KAAK4J,qBACvB7C,iBAAkB/G,KAAKL,MAAMoH,mBAE/B,kBAAC,EAAD,CACEG,gBAAiBlH,KAAK6J,oBACtB5C,gBAAiBjH,KAAKL,MAAMsH,kBAE9B,kBAAC,EAAD,CACEM,gBAAiBvH,KAAK+J,oBACtB1C,aAAcrH,KAAKL,MAAM0H,aACzBD,mBAAoBpH,KAAK8J,2BAE3B,kBAAC,EAAD,CACEhC,mBAAoB9H,KAAKkK,uBACzBrC,gBAAiB7H,KAAKL,MAAMkI,gBAC5BD,sBAAuB5H,KAAKiK,+BAE9B,4BACEjL,UAAU,2BACVkD,QAASlC,KAAK0I,iBAFhB,sBAQF,yBAAK1J,UAAU,wBACb,yBAAKA,UAAU,aACiB,IAA7BgB,KAAKL,MAAM0E,gBACU,IAAtBrE,KAAKL,MAAMiJ,OACT,gDACE,MAELtI,EAAO6B,KAAI,SAACxB,EAAO0J,GAAR,OACV,kBAAC,EAAD,CACEzF,cAAejE,EACf2J,YAAaD,EACb7H,IAAK7B,EAAM8B,WAMnB,yBAAKzD,UAAU,2BACb,kBAAC,EAAD,CACEkF,YAAalE,KAAKiJ,iBAClBH,UAAW9I,KAAKL,MAAMmJ,UACtB9E,YAAahE,KAAKL,MAAMqE,YACxBO,gBAAiBvE,KAAKL,MAAM4E,gBAC5BJ,aAAcnE,KAAKL,MAAMwE,aACzBC,SAAUpE,KAAKL,MAAMyE,SACrBC,cAAerE,KAAKL,MAAM0E,iBAG9B,yBAAKrF,UAAU,UACb,kBAAC,EAAD,QA1EC,+C,GA3NQoB,a,QC+FNmK,G,mNArGb5K,MAAQ,CACNgB,MAAM,GACN6J,KAAM,iD,kEAKa,IAAD,OACZC,EAAQzK,KAAK+D,MAAM2G,SAASD,OAClC1J,QAAQC,IAAIyJ,GAFM,MAGHA,EAAOE,MAAM,KAHV,mBAGTC,GAHS,WAIlB7J,QAAQC,IAAI4J,GAGZhH,EZtBO,+CYsBgB,WAAQgH,IAAMpJ,MAAK,SAAAE,GACxC,EAAKzB,SAAS,CAACU,MAAMe,IACrB,IAAMmJ,EAAY,EAAKlL,MAAM6K,KAAO,EAAK7K,MAAMgB,MAAM+B,MACrD3B,QAAQC,IAAI6J,Q,+BAMP,IACAlK,EAASX,KAAKL,MAAdgB,MACA6J,EAAQxK,KAAKL,MAAb6K,KACP,OACI,yBAAKxL,UAAU,kBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,kBACf,yBAAMA,UAAU,aAAasD,IAAO3B,EAAMmB,OAAQS,IAAI,UAEtD,yBAAKvD,UAAU,wBACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,cAAc2B,EAAM+B,MAAjC,MAEF,yBAAK1D,UAAU,sBACX,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAb,SACA,2BAAI2B,EAAME,OAEZ,yBAAK7B,UAAU,aACb,uBAAGA,UAAU,cAAb,aACA,2BAAI2B,EAAMoE,UAEZ,yBAAK/F,UAAU,aACb,uBAAGA,UAAU,cAAb,UACA,2BAAI2B,EAAMgC,QAEZ,yBAAK3D,UAAU,aACb,uBAAGA,UAAU,cAAb,cACA,2BAAI2B,EAAMkE,WAEZ,yBAAK7F,UAAU,aACb,uBAAGA,UAAU,cAAb,YACA,2BAAI2B,EAAMmE,UAEZ,yBAAK9F,UAAU,aACb,uBAAGA,UAAU,cAAb,iBACA,2BAAI2B,EAAMiC,aAEZ,yBAAK5D,UAAU,aACb,uBAAGA,UAAU,cAAb,eACA,2BAAI2B,EAAMmK,YAEZ,yBAAK9L,UAAU,aACb,uBAAGA,UAAU,cAAb,cACA,2BAAI2B,EAAMoK,UAGhB,yBAAK/L,UAAU,sBACf,yBAAKA,UAAU,yBACf,kBAAC,IAAD,CAAMkB,GAAK,iBAAiB,4BAAQlB,UAAU,gBAAlB,aAE5B,yBAAKA,UAAU,0BACf,iDACA,uBAAGC,KAAQuL,EAAMtL,OAAO,SACtBC,IAAI,sBACJH,UAAU,8BAGR,kBAAC,IAAD,CAAiBI,KAAMC,IAAWC,KAAK,YAY7C,yBAAKN,UAAU,UACb,kBAAC,EAAD,Y,GA/FUoB,c,QC8MP4K,G,kNAjNbrL,MAAQ,CACNsL,eAAgB,GAChBC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,UAAW,SACXC,sBAAsB,G,EASxBC,eAAiB,SAACC,GAChB,EAAKzL,SAAS,CACZgL,eAAgB,GAChBC,eAAgB,GAChBG,cAAeK,EAAKvB,W,EAIxBwB,cAAgB,SAACD,GACf,EAAKzL,SAAS,CACZkL,cAAe,GACfC,cAAe,GACfE,aAAcI,EAAKvB,W,EAIvByB,sBAAwB,SAACL,GACvB,EAAKtL,SAAS,CACZsL,e,EAIJzF,aAAe,SAACQ,GACd,EAAKrG,SAAL,eACGqG,EAAMpH,OAAO2M,KAAOvF,EAAMpH,OAAO+F,S,EAItC6G,0BAA4B,SAACC,GAC3BlM,SAASC,OAAT,gBAA2BiM,EAAKC,aAChC,EAAKjI,MAAMkI,QAAQnL,KAAK,KACxBoL,OAAOxB,SAASyB,U,EAGlBC,mBAAqB,SAAC9F,GACpB/E,MAAM,sDAAuD,CAC3D8K,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,EAAKpN,MAAMsL,eACrB+B,SAAU,EAAKrN,MAAMuL,mBAGtB1J,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,IACkB,IAAvBA,EAAKuL,cACD,EAAKnB,0BAA0BpK,GAC/B,EAAK+J,eAAe/J,MAE5B4E,EAAM4G,kB,EAGRC,kBAAoB,SAAC7G,GACnB/E,MAAM,mDAAoD,CACxD8K,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,EAAKpN,MAAMwL,cACrB6B,SAAU,EAAKrN,MAAMyL,kBAGtB5J,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,IACkB,IAAvBA,EAAKuL,cACD,EAAKnB,0BAA0BpK,GAC/B,EAAKiK,cAAcjK,MAE3B4E,EAAM4G,kB,kEAtFFrN,SAASC,OAAOsN,WAAW,WAC7BpN,KAAKC,SAAS,CAAEuL,sBAAsB,M,+BAwFhC,IAAD,OACP,OACE,yBAAKxM,UAAU,gBACb,yBACEA,UACE,qBAC0B,WAAzBgB,KAAKL,MAAM4L,UAAyB,sBAAwB,IAE/DX,GAAG,aAEH,yBAAK5L,UAAU,oCACb,0BAAMA,UAAU,gBAAgBqO,SAAUrN,KAAKoM,oBAC7C,wBAAIpN,UAAU,UAAd,kBACA,2BACEA,UAAU,iBACV4H,KAAK,OACLX,YAAY,WACZ4F,KAAK,iBACL5G,MAAOjF,KAAKL,MAAMsL,eAClBzG,SAAUxE,KAAK8F,aACfwH,UAAQ,IAEV,2BACEtO,UAAU,iBACV4H,KAAK,WACLX,YAAY,WACZ4F,KAAK,iBACL5G,MAAOjF,KAAKL,MAAMuL,eAClB1G,SAAUxE,KAAK8F,aACfwH,UAAQ,IAEV,uBAAGtO,UAAU,oBAAoBgB,KAAKL,MAAM0L,eAC5C,4BAAQrM,UAAU,iBAAlB,aAGJ,yBAAKA,UAAU,oCACb,0BAAMA,UAAU,gBAAgBqO,SAAUrN,KAAKmN,oBACR,IAApCnN,KAAKL,MAAM6L,qBACV,oCACE,wBAAIxM,UAAU,UAAd,WACA,2BACEA,UAAU,iBACV4H,KAAK,OACLX,YAAY,WACZ4F,KAAK,gBACL5G,MAAOjF,KAAKL,MAAMwL,cAClB3G,SAAUxE,KAAK8F,aACfwH,UAAQ,IAEV,2BACEtO,UAAU,iBACV4H,KAAK,WACLX,YAAY,WACZ4F,KAAK,gBACL5G,MAAOjF,KAAKL,MAAMyL,cAClB5G,SAAUxE,KAAK8F,aACfwH,UAAQ,IAEV,uBAAGtO,UAAU,oBAAoBgB,KAAKL,MAAM2L,cAC5C,4BAAQtM,UAAU,iBAAlB,YAGF,6DAON,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,UAAd,gBACA,uBAAGA,UAAU,qBAAb,kEAGA,4BACEA,UAAU,sBACV4L,GAAG,SACH1I,QAAS,kBAAM,EAAK0J,sBAAsB,YAH5C,YAQF,yBAAK5M,UAAU,+BACb,wBAAIA,UAAU,UAAd,kBACA,uBAAGA,UAAU,qBAAb,yDAGA,4BACEA,UAAU,sBACV4L,GAAG,SACH1I,QAAS,kBAAM,EAAK0J,sBAAsB,YAH5C,eAWR,yBAAK5M,UAAU,UACb,kBAAC,EAAD,Y,GA3MUoB,c,cCJL,SAASmN,GAAS7B,GAC/B,IAAM8B,EAAQ3N,SAASC,OACpB6K,MAAM,KACN8C,MAAK,SAACC,GACL,GAAIA,EAAQ3N,SAAS,SAAU,OAAO,KAEvC4K,MAAM,KAAK,GAEdpJ,MAAM,+CAAgD,CACpD8K,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,eAAgBe,GAElBd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUpB,KAEpBlK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLX,QAAQC,IAAIU,M,ICmTHiM,G,4MAnUbhO,MAAQ,CACN+C,MAAO,GACP7B,KAAM,GACN8B,MAAO,GACPb,OAAQ,GACRgD,QAAS,GACTD,SAAU,GACVE,QAAS,GACT6I,UAAW,GACXC,WAAY,GACZ9C,OAAQ,GACR3J,KAAM,I,EAGR0M,cAAgB,SAACxH,GACfA,EAAM4G,iBAGNK,GADW,EAAKQ,cAEhB,EAAK9N,SAAS,CACZyC,MAAO,GACP7B,KAAM,GACN8B,MAAO,GACPb,OAAQ,GACRgD,QAAS,GACTD,SAAU,GACVE,QAAS,GACT6I,UAAW,GACXC,WAAY,GACZ9C,OAAQ,GACR3J,KAAM,M,EAIV2M,WAAa,WAeX,MAdW,CACTrL,MAAO,EAAK/C,MAAM+C,MAClBoC,QAAS,EAAKnF,MAAMmF,QACpBjE,KAAM,EAAKlB,MAAMkB,KACjB8B,MAAO,EAAKhD,MAAMgD,MAClBkC,SAAU,EAAKlF,MAAMkF,SACrBE,QAAS,EAAKpF,MAAMoF,QACpB6I,UAAW,EAAKjO,MAAMiO,UACtBC,WAAY,EAAKlO,MAAMkO,WACvB/L,OAAQ,EAAKnC,MAAMmC,OACnBiJ,OAAQ,EAAKpL,MAAMoL,OACnB3J,KAAM,EAAKzB,MAAMyB,O,EAMrB4M,cAAgB,SAAC1H,GACf,EAAKrG,SAAL,eAAiBqG,EAAMpH,OAAO2M,KAAOvF,EAAMpH,OAAO+F,S,uDAIlD,OACE,yBAAKjG,UAAU,WACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBqO,SAAUrN,KAAK8N,eAChD,yBAAK9O,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,2BACRlP,UAAU,aAFZ,iBAMA,2BACEiG,MAAOjF,KAAKL,MAAM+C,MAClBmJ,KAAK,QACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,2BACH5L,UAAU,eACViH,YAAY,cACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,4BACRlP,UAAU,aAFZ,mBAMA,2BACEiG,MAAOjF,KAAKL,MAAMoL,OAClBc,KAAK,SACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,4BACH5L,UAAU,eACViH,YAAY,SACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,kCAMN,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,2BACRlP,UAAU,aAFZ,WAMA,2BACEiG,MAAOjF,KAAKL,MAAMgD,MAClBkJ,KAAK,QACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,2BACH5L,UAAU,eACViH,YAAY,QACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,0BACRlP,UAAU,aAFZ,UAMA,2BACEiG,MAAOjF,KAAKL,MAAMkB,KAClBgL,KAAK,OACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,SACLgE,GAAG,0BACH5L,UAAU,eACViH,YAAY,OACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,6BACRlP,UAAU,aAFZ,aAMA,2BACEiG,MAAOjF,KAAKL,MAAMmF,QAClB+G,KAAK,UACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,6BACH5L,UAAU,eACViH,YAAY,UACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,kCAMN,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,4BACRlP,UAAU,aAFZ,gBAMA,2BACEiG,MAAOjF,KAAKL,MAAMmC,OAClB+J,KAAK,SACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,4BACH5L,UAAU,eACViH,YAAY,aACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,0BACRlP,UAAU,aAFZ,UAMA,2BACEiG,MAAOjF,KAAKL,MAAMyB,KAClByK,KAAK,OACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,0BACH5L,UAAU,eACViH,YAAY,OACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,kCAMN,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,8BACRlP,UAAU,aAFZ,cAMA,2BACEiG,MAAOjF,KAAKL,MAAMkF,SAClBgH,KAAK,WACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,OACLgE,GAAG,8BACH5L,UAAU,eACViH,YAAY,WACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,6BACRlP,UAAU,aAFZ,aAMA,2BACEiG,MAAOjF,KAAKL,MAAMoF,QAClB8G,KAAK,UACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,SACLgE,GAAG,6BACH5L,UAAU,eACViH,YAAY,UACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,+BACRlP,UAAU,aAFZ,gBAMA,2BACEiG,MAAOjF,KAAKL,MAAMiO,UAClB/B,KAAK,YACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,SACLgE,GAAG,+BACH5L,UAAU,eACViH,YAAY,aACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,gCAIF,kBAAC,IAAD,CAAQiP,GAAG,KACT,2BACEC,QAAQ,gCACRlP,UAAU,aAFZ,iBAMA,2BACEiG,MAAOjF,KAAKL,MAAMkO,WAClBhC,KAAK,aACLrH,SAAUxE,KAAKgO,cACfpH,KAAK,SACLgE,GAAG,gCACH5L,UAAU,eACViH,YAAY,cACZqH,UAAQ,IAEV,yBAAKtO,UAAU,oBAAf,kCAMN,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAQsG,MAAM,UAAUsB,KAAK,UAA7B,gBAMN,6BACE,kBAAC,EAAD,Y,GA7TQxG,a,gBCNX,SAAS+N,GAAkBvD,EAAI4C,GAClC,OAAOjM,MAAM,gDAAkDqJ,EAAI,CAC/DyB,OAAQ,SACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,mBAChB,eAAgBe,GAEpBd,SAAU,SACVC,eAAgB,gBAKfnL,MAAK,SAAA4M,GACF,OAAOA,KACRC,OAAM,SAAAC,GAAG,OAAIA,K,WCyBTC,G,4MArCX5O,MAAQ,G,EAIR6O,oBAAsB,WAClB,IAAMhB,EAAQ3N,SAASC,OAClB6K,MAAM,KACN8C,MAAK,SAACC,GACH,GAAIA,EAAQ3N,SAAS,SACjB,OAAO,KAEd4K,MAAM,KAAK,GAGhB,OADA5J,QAAQC,IAAI,EAAK+C,MAAM0K,oBAAX,KACLN,GAAkB,EAAKpK,MAAM0K,oBAAX,IAAuCjB,I,uDAGhE,OACI,6BACI,yBAAKxO,UAAU,gCAA+B,yBAAKuD,IAAI,SAASD,IAAKtC,KAAK+D,MAAM0K,oBAAX,UACrE,0BACIzP,UAAU,mBACVqO,SAAUrN,KAAK8N,cACfY,YAAU,GAEV,yBAAK1P,UAAU,2BACX,kBAAC,IAAD,CAAQsG,MAAM,UAAUsB,KAAK,SAAS5H,UAAU,gBAAgBkD,QAASlC,KAAKwO,qBAA9E,uB,GA3BCpO,aCEJuO,G,4MACjBhP,MAAQ,CACJ+L,KAAM,GACNkD,wBAAyB,GACzBC,UAAU,G,EAGdC,UAAY,WACR,EAAK7O,SAAS,CACV4O,UAAU,K,EAKlBE,oBAAsB,WAAO,IAAD,gBAEN,EAAKpP,MAAM+L,MAFL,IAExB,2BAAmC,CAAC,IAA3B/K,EAA0B,QAE/B,GAAIA,EAAK,QAAc,EAAKhB,MAAMiP,wBAAwB3J,MAEtD,OAAOtE,EAAMqO,SANG,gC,kEAaP,IAAD,OAChBjO,QAAQC,IAAI,WAEZ4C,EAAY,4DAA4DpC,MAAK,SAACE,GAC1EX,QAAQC,IAAIU,GAEZ,IAAIuN,EAAa,GACjBvN,EAAKE,QAAQO,KAAI,SAACxB,EAAO0J,GAAR,OAAkB4E,EAAWnO,KAAK,CAAE0B,IAAK6H,EAAOpF,MAAOtE,EAAM+B,MAAOsM,QAASrO,OAC9FI,QAAQC,IAAIiO,GAEZ,EAAKhP,SAAS,CACVyL,KAAMuD,S,+BAKR,IAAD,OACGvD,EAAS1L,KAAKL,MAAd+L,KACR,OACI,yBAAK1M,UAAU,WACX,yBAAKA,UAAU,yBAEX,yBAAKA,UAAU,gCACX,kBAAC,KAAD,CAEIiH,YAAY,qBACZyF,KAAMA,EACNwD,SAAU,SAAAC,GACN,EAAKlP,SAAS,CAAE2O,wBAAyBO,IACzC,EAAKL,aAGTM,oBAAoB,MAEpBC,YAAa,CACTC,UAAW,QAKtBtP,KAAKL,MAAMkP,SAAW,kBAAC,GAAD,CAAYJ,oBAAqBzO,KAAK+O,wBAA4B,MAG7F,iCAAM,kBAAC,EAAD,Y,GAtEc3O,a,cCN7B,SAASmP,GAAkB3E,EAAIc,EAAM8B,GACxC,OAAOjM,MAAM,gDAAkDqJ,EAAI,CAC/DyB,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,mBAChB,eAAgBe,GAEpBd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUpB,KAIpBlK,MAAK,SAAA4M,GACF,OAAOA,KACRC,OAAM,SAAAC,GAAG,OAAIA,K,IC4TTkB,G,4MAxUX7P,MAAQ,CACJ+C,MAAO,EAAKqB,MAAM0K,oBAAoB/L,MACtCoC,QAAS,EAAKf,MAAM0K,oBAAoB3J,QACxCjE,KAAM,EAAKkD,MAAM0K,oBAAoB5N,KACrC8B,MAAO,EAAKoB,MAAM0K,oBAAoB9L,MACtCkC,SAAU,EAAKd,MAAM0K,oBAAoB5J,SACzCE,QAAS,EAAKhB,MAAM0K,oBAAoB1J,QACxC+F,UAAW,EAAK/G,MAAM0K,oBAAoB3D,UAC1ClI,WAAY,EAAKmB,MAAM0K,oBAAoB7L,WAC3Cd,OAAQ,EAAKiC,MAAM0K,oBAAoB3M,OACvCiJ,OAAQ,EAAKhH,MAAM0K,oBAAoB1D,OACvC3J,KAAM,EAAK2C,MAAM0K,oBAAoBrN,KACrCqO,cAAe,EAAK1L,MAAM0K,qB,EAG9BjK,SAAW,SAACkL,GACR,EAAKzP,SAAL,eAAiByP,EAAExQ,OAAO2M,KAAO6D,EAAExQ,OAAO+F,S,EAG9C0K,mBAAqB,WACjB,IAAMnC,EAAQ3N,SAASC,OAClB6K,MAAM,KACN8C,MAAK,SAACC,GACH,GAAIA,EAAQ3N,SAAS,SACjB,OAAO,KAEd4K,MAAM,KAAK,GACVe,EAAO,CACThJ,MAAO,EAAK/C,MAAM+C,MAClBoC,QAAS,EAAKnF,MAAMmF,QACpBjE,KAAM,EAAKlB,MAAMkB,KACjB8B,MAAO,EAAKhD,MAAMgD,MAClBkC,SAAU,EAAKlF,MAAMkF,SACrBE,QAAS,EAAKpF,MAAMoF,QACpB+F,UAAW,EAAKnL,MAAMmL,UACtBlI,WAAY,EAAKjD,MAAMiD,WACvBd,OAAQ,EAAKnC,MAAMmC,OACnBiJ,OAAQ,EAAKpL,MAAMoL,OACnB3J,KAAM,EAAKzB,MAAMyB,MAErBL,QAAQC,IAAI,EAAKrB,OACjBoB,QAAQC,IAAI,EAAK+C,MAAM0K,oBAAoBhM,KAC3C8M,GAAkB,EAAKxL,MAAM0K,oBAAoBhM,IAAKiJ,EAAM8B,I,mEASxDxN,KAAKL,MAAM8P,gBAAkBzP,KAAK+D,MAAM0K,qBAExCzO,KAAKC,SAAS,CACVyC,MAAO1C,KAAK+D,MAAM0K,oBAAoB/L,MACtCoC,QAAS9E,KAAK+D,MAAM0K,oBAAoB3J,QACxCjE,KAAMb,KAAK+D,MAAM0K,oBAAoB5N,KACrC8B,MAAO3C,KAAK+D,MAAM0K,oBAAoB9L,MACtCkC,SAAU7E,KAAK+D,MAAM0K,oBAAoB5J,SACzCE,QAAS/E,KAAK+D,MAAM0K,oBAAoB1J,QACxC+F,UAAW9K,KAAK+D,MAAM0K,oBAAoB3D,UAC1ClI,WAAY5C,KAAK+D,MAAM0K,oBAAoB7L,WAC3Cd,OAAQ9B,KAAK+D,MAAM0K,oBAAoB3M,OACvCiJ,OAAQ/K,KAAK+D,MAAM0K,oBAAoB1D,OACvC3J,KAAMpB,KAAK+D,MAAM0K,oBAAoBrN,KACrCqO,cAAezP,KAAK+D,MAAM0K,wB,+BAOlC,OAEI,6BACI,0BACIzP,UAAU,mBACVqO,SAAUrN,KAAK8N,cACfY,YAAU,GAGV,kBAAC,IAAD,CAAQ1P,UAAU,uBAEd,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,2BACRlP,UAAU,aAFd,iBAMA,2BACIiG,MAAOjF,KAAKL,MAAM+C,MAClBmJ,KAAK,QACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,2BACH5L,UAAU,eACViH,YAAY,cACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAGJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,4BACRlP,UAAU,aAFd,aAMA,2BACIiG,MAAOjF,KAAKL,MAAMoL,OAClBc,KAAK,SACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,4BACH5L,UAAU,eACViH,YAAY,UACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAIJ,kBAAC,IAAD,KACI,yBAAKuD,IAAI,SAASD,IAAKtC,KAAKL,MAAMmC,WAO1C,yBAAK9C,UAAU,iBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,2BACRlP,UAAU,aAFd,WAMA,2BACIiG,MAAOjF,KAAKL,MAAMgD,MAClBkJ,KAAK,QACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,2BACH5L,UAAU,eACViH,YAAY,QACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,0BACRlP,UAAU,aAFd,UAMA,2BACIiG,MAAOjF,KAAKL,MAAMkB,KAClBgL,KAAK,OACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,SACLgE,GAAG,0BACH5L,UAAU,eACViH,YAAY,OACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,6BACRlP,UAAU,aAFd,aAMA,2BACIiG,MAAOjF,KAAKL,MAAMmF,QAClB+G,KAAK,UACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,6BACH5L,UAAU,eACViH,YAAY,UACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,kCAKZ,yBAAKA,UAAU,iBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,4BACRlP,UAAU,aAFd,gBAMA,2BACIiG,MAAOjF,KAAKL,MAAMmC,OAClB+J,KAAK,SACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,4BACH5L,UAAU,eACViH,YAAY,aACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,0BACRlP,UAAU,aAFd,UAMA,2BACIiG,MAAOjF,KAAKL,MAAMyB,KAClByK,KAAK,OACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,0BACH5L,UAAU,eACViH,YAAY,OACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,kCAIZ,yBAAKA,UAAU,iBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,8BACRlP,UAAU,aAFd,cAMA,2BACIiG,MAAOjF,KAAKL,MAAMkF,SAClBgH,KAAK,WACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,8BACH5L,UAAU,eACViH,YAAY,WACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,6BACRlP,UAAU,aAFd,aAMA,2BACIiG,MAAOjF,KAAKL,MAAMoF,QAClB8G,KAAK,UACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,6BACH5L,UAAU,eACViH,YAAY,UACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,+BACRlP,UAAU,aAFd,gBAMA,2BACIiG,MAAOjF,KAAKL,MAAMmL,UAClBe,KAAK,YACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,OACLgE,GAAG,+BACH5L,UAAU,eACViH,YAAY,aACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,gCAEJ,kBAAC,IAAD,CAAQiP,GAAG,KACP,2BACIC,QAAQ,gCACRlP,UAAU,aAFd,iBAMA,2BACIiG,MAAOjF,KAAKL,MAAMiD,WAClBiJ,KAAK,aACLrH,SAAUxE,KAAKwE,SACfoC,KAAK,SACLgE,GAAG,gCACH5L,UAAU,eACViH,YAAY,cACZqH,UAAQ,IAEZ,yBAAKtO,UAAU,oBAAf,kCAIZ,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CAAQsG,MAAM,UAAUsB,KAAK,SAAS5H,UAAU,gBAAgBkD,QAASlC,KAAK2P,oBAA9E,qB,GA/TDvP,aCEFwP,G,4MACjBjQ,MAAQ,CACJ+L,KAAM,GACNkD,wBAAyB,GACzBC,UAAU,G,EAGdC,UAAY,WACR,EAAK7O,SAAS,CACV4O,UAAU,K,EAKlBE,oBAAsB,WAAO,IAAD,gBAEN,EAAKpP,MAAM+L,MAFL,IAExB,2BAAmC,CAAC,IAA3B/K,EAA0B,QAE/B,GAAIA,EAAK,QAAc,EAAKhB,MAAMiP,wBAAwB3J,MAEtD,OAAOtE,EAAMqO,SANG,gC,kEAWP,IAAD,OAChBjO,QAAQC,IAAI,WAEZ4C,EAAY,4DAA4DpC,MAAK,SAACE,GAC1EX,QAAQC,IAAIU,GAEZ,IAAIuN,EAAa,GACjBvN,EAAKE,QAAQO,KAAI,SAACxB,EAAO0J,GAAR,OAAkB4E,EAAWnO,KAAK,CAAE0B,IAAK6H,EAAOpF,MAAOtE,EAAM+B,MAAOsM,QAASrO,OAC9FI,QAAQC,IAAIiO,GAEZ,EAAKhP,SAAS,CACVyL,KAAMuD,S,+BAKR,IAAD,OACGvD,EAAS1L,KAAKL,MAAd+L,KACR,OACI,yBAAK1M,UAAU,WACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gCACX,kBAAC,KAAD,CACIiH,YAAY,qBACZyF,KAAMA,EACNwD,SAAU,SAAAC,GACN,EAAKlP,SAAS,CAAE2O,wBAAyBO,IACzC,EAAKL,aAGTO,YAAa,CACTC,UAAW,QAKtBtP,KAAKL,MAAMkP,SAAW,kBAAC,GAAD,CAAUJ,oBAAqBzO,KAAK+O,wBAA4B,MAG3F,6BAAK,kBAAC,EAAD,Y,GAhEkB3O,a,yBCHxB,SAASyP,KACtB,IAAI5D,EAAU6D,cAOd,OACE,4BAAQ9Q,UAAU,eAAe4H,KAAK,SAAS1E,QANjD,WAkBIsL,IACFjM,MAPQ,oDAOG,CACT8K,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChB,eAAgB5M,SAASC,OAAO6K,MAAM,KAAK,MAG5CnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLX,QAAQC,IAAIU,GACZ7B,SAASC,OACP,yDACFoM,OAAOxB,SAASyB,YA7BpBF,EAAQnL,KAAK,OAIb,WAMJ,IACM0M,GAAQ3N,SAASC,OACpB6K,MAAM,KACNoF,MAAK,SAAC3N,GAAD,OAAUA,EAAK4N,OAAO5C,WAAW,a,ICwG1B6C,G,4MArHbtQ,MAAQ,CACNC,YAAY,EACZsQ,UAAW,a,kEA8BCrQ,SAASC,OACXC,SAAS,UACjBC,KAAKC,SAAS,CAAEL,YAAY,M,+BAK9B,OACE,kBAACuQ,GAAA,EAAD,CAAQC,GAAG,OAAO1I,QAAQ,OAAO2I,OAAO,KAAKrR,UAAU,OACrD,kBAACmR,GAAA,EAAOG,MAAR,KACE,kBAAC,IAAD,CAASC,OAAK,EAACvR,UAAU,WAAWkB,GAAG,KACrC,yBAAKlB,UAAU,WAAWsD,IAAKkO,EAAQ,SAG3C,kBAACL,GAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,GAAA,EAAOQ,SAAR,CAAiB/F,GAAG,oBAClB,kBAAC7I,EAAA,EAAD,CAAK/C,UAAU,WACb,kBAAC,IAAD,CACEuR,OAAK,EACLvR,UAAU,WACVkB,GAAG,IACH0Q,gBAAgB,WAChBnN,MAAO,CAAEoN,WAAY,GAAIC,SAAU,KALrC,OAOO,KAEP,kBAAC,IAAD,CACEP,OAAK,EACLvR,UAAU,WACVkB,GAAG,gBACH0Q,gBAAgB,WAChBnN,MAAO,CAAEoN,WAAY,GAAIC,SAAU,KALrC,gBAUC9Q,KAAKL,MAAMC,WACV,kBAAC,IAAMO,SAAP,KACE,kBAAC4Q,GAAA,EAAD,aACE/R,UAAU,+BACV4R,gBAAgB,WAChBnN,MAAO,CACLoN,WAAY,GACZC,SAAU,IAEZE,MAAOhR,KAAKL,MAAMuQ,UAClBtF,GAAG,gBARL,YASY,2CAEV,yBAAK5L,UAAU,uBACb,kBAAC,IAAD,CAASuR,OAAK,EAACrQ,GAAG,kBAAlB,aAGA,kBAAC,IAAD,CAASqQ,OAAK,EAACrQ,GAAG,qBAAlB,gBAGA,kBAAC,IAAD,CAASqQ,OAAK,EAACrQ,GAAG,mBAAlB,iBAMJ,KAEHF,KAAKL,MAAMC,WACV,kBAACiQ,GAAD,MAEA,kBAAC,IAAD,CACEU,OAAK,EACLvR,UAAU,WACVkB,GAAG,cACH0Q,gBAAgB,WAChBnN,MAAO,CAAEoN,WAAY,GAAIC,SAAU,KALrC,YAWH9Q,KAAK+D,MAAMkN,e,GA/GG7Q,aCqCV8Q,G,uKArBX,OACE,kBAAC,IAAM/Q,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgR,KAAK,IAAIZ,OAAK,EAACa,UAAWzN,IACjC,kBAAC,IAAD,CAAOwN,KAAK,gBAAgBZ,OAAK,EAACa,UAAW3I,IAC7C,kBAAC,IAAD,CAAO0I,KAAK,iBAAiBZ,OAAK,EAACa,UAAW7G,IAC9C,kBAAC,IAAD,CAAO4G,KAAK,cAAcZ,OAAK,EAACa,UAAWpG,IAC3C,kBAAC,IAAD,CAAOmG,KAAK,iBAAiBZ,OAAK,EAACa,UAAWzD,KAC9C,kBAAC,IAAD,CAAOwD,KAAK,kBAAkBZ,OAAK,EAACa,UAAWxB,KAC/C,kBAAC,IAAD,CAAOuB,KAAK,oBAAoBZ,OAAK,EAACa,UAAWzC,Y,GAb3CvO,aCVEiR,QACW,cAA7BnF,OAAOxB,SAAS4G,UAEe,UAA7BpF,OAAOxB,SAAS4G,UAEhBpF,OAAOxB,SAAS4G,SAASC,MACvB,2D,OCVNC,IAASC,OAEP,kBAAC,IAAD,KACE,kBAAC,GAAD,OACe5R,SAAS6R,eAAe,SDuHrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrQ,MAAK,SAAAsQ,GACJA,EAAaC,gBAEd1D,OAAM,SAAA2D,GACLjR,QAAQiR,MAAMA,EAAM7H,a","file":"static/js/main.77e23685.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mr3.ed0a27e8.PNG\";","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faYoutube,\r\n  faFacebook,\r\n  faTwitter,\r\n  faInstagram,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n// import { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport \"./Footer.css\";\r\n\r\nexport default function FollowUs() {\r\n  return (\r\n    <div className=\"socialContainer\">\r\n      <a\r\n        href=\"https://www.youtube.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"youtube social\"\r\n      >\r\n        <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://www.facebook.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"facebool social\"\r\n      >\r\n        <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://twitter.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"twitter social\"\r\n      >\r\n        <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://www.instagram.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"instagram social\"\r\n      >\r\n        <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FollowUs from \"./FollowUs\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { SocialIcon } from 'react-social-icons';\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n  };\r\n  // add some comm\r\n  componentDidMount() {\r\n    let token = document.cookie;\r\n    if (token.includes(\"token\")) {\r\n      this.setState({ isLoggedIn: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"FooterContainer row\">\r\n        <div className=\"contactUs infoContainer col-sm\">\r\n          <div className=\"titleTags\">\r\n            <h4>Contact Us</h4>\r\n          </div>\r\n          <div className=\"detailsContainer\">\r\n            <p>contactus@movie-raiting.com</p>\r\n            <p>searchyourmovie@movie-raiting.com</p>\r\n            <p>www.movie-raiting.com</p>\r\n            <p>0262-165-376</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"shortcuts infoContainer col-sm\">\r\n          <div className=\"titleTags\">\r\n            <h4>Shortcuts</h4>\r\n          </div>\r\n          <div className=\"detailsContainer\">\r\n            <Link to={\"/\"} className=\"shortcutsLinks\">\r\n              {\" \"}\r\n              <p>Home</p>\r\n            </Link>\r\n            <Link to={\"/search-movie\"} className=\"shortcutsLinks\">\r\n              {\" \"}\r\n              <p>Search Movie</p>\r\n            </Link>\r\n            <Link to={\"/login-page\"} className=\"shortcutsLinks\">\r\n              {\" \"}\r\n              <p>Authentication</p>\r\n            </Link>\r\n            {this.state.isLoggedIn ? (\r\n              <React.Fragment>\r\n                <Link to={\"/editation/add\"} className=\"shortcutsLinks\">\r\n                  {\" \"}\r\n                  <p>Add Movie</p>\r\n                </Link>\r\n                <Link to={\"/editation/delete\"} className=\"shortcutsLinks\">\r\n                  {\" \"}\r\n                  <p>Delete Movie</p>\r\n                </Link>\r\n                <Link to={\"/editation/edit\"} className=\"shortcutsLinks\">\r\n                  {\" \"}\r\n                  <p>Edit Movie</p>\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"followUs infoContainer col-sm\">\r\n          <div className=\"titleTags\">\r\n            <h4>Follow Us</h4>\r\n          </div>\r\n          <div className=\"detailsContainer\">\r\n            <div>\r\n              <FollowUs />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nclass MovieTab extends Component {\r\n  state = {\r\n    movies: [],\r\n    displayMovies: [],\r\n    movieYear: \"\",\r\n    newReleases: [],\r\n  };\r\n\r\n  getNewRelease = () => {\r\n    const newReleases = [];\r\n\r\n    for (let movie of this.state.movies) {\r\n      if (parseInt(movie.Year) > 2015) {\r\n        newReleases.push(movie);\r\n      }\r\n    }\r\n    console.log(newReleases);\r\n    this.setState({\r\n      displayMovies: newReleases.slice(0, 12),\r\n    });\r\n  };\r\n\r\n  getTvShows = () => {\r\n    const tvShow = [];\r\n    for (let movie of this.state.movies) {\r\n      if (movie.Type === \"series\") {\r\n        tvShow.push(movie);\r\n      }\r\n      this.setState({\r\n        displayMovies: tvShow.slice(0, 12),\r\n      });\r\n    }\r\n  };\r\n\r\n  getMovies = () => {\r\n    const justMovie = [];\r\n    for (let movie of this.state.movies) {\r\n      if (movie.Type === \"movie\") {\r\n        justMovie.push(movie);\r\n      }\r\n      this.setState({\r\n        displayMovies: justMovie.slice(0, 12),\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://movies-app-siit.herokuapp.com/movies?take=1000\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // console.log(json);\r\n        const totalMovies = json.results.filter((movie) => movie.Poster);\r\n        this.setState({\r\n          movies: totalMovies,\r\n          displayMovies: totalMovies.slice(0, 12),\r\n          movieYear: json.results.Year,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"home-content-head mb-5 shadow\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mt-4 mb-2\">\r\n                <h2>New items</h2>\r\n              </div>\r\n              <Nav className=\"justify-content-start\">\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#\" onClick={this.getNewRelease}>\r\n                    New Releases\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#\" onClick={this.getMovies}>\r\n                    Movies\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"#\" onClick={this.getTvShows}>\r\n                    TV Shows\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.state.displayMovies.map((item) => (\r\n            <div class=\"col-6 col-sm-12 col-lg-6\">\r\n              <div className=\"custom-card mb-5\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-sm-4 px-3\">\r\n                    <img\r\n                      className=\"w-100\"\r\n                      src={item.Poster}\r\n                      alt=\"\"\r\n                      key={item._id}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-8\">\r\n                    <div className=\"custom-card-content\">\r\n                      <h3 className=\"custom-card-title\">{item.Title}</h3>\r\n                      <span>{item.Genre}</span>\r\n                      <div className=\"custom-card-wrap\">\r\n                        <p>{item.imdbRating}</p>\r\n                        <div className=\"custom-card-year\">\r\n                          {item.Year < 2018 ? <p>{item.Year}</p> : null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieTab;\r\n","import React, { Component } from \"react\";\r\nimport MovieTab from \"./MovieTab\";\r\n\r\nclass HomeContent extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"home-content text-light\">\r\n        <MovieTab />\r\n        <div className=\"container\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContent;\r\n","export function getMoveCssClass(moveRight, moveLeft) {\r\n  if (moveRight) {\r\n    return \" custom-carousel-move-right\";\r\n  }\r\n  if (moveLeft) {\r\n    return \" custom-carousel-move-left\";\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function disableButtonLeft(movieIndex, movieList) {\r\n  if (movieIndex === 0) {\r\n    return \" disable-carousel-nav-button\";\r\n  }\r\n  return \"\";\r\n}\r\nexport function disableButtonRight(movieIndex, movieList) {\r\n  if (movieList.length - 4 === movieIndex) {\r\n    return \" disable-carousel-nav-button\";\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function changeImg(moveRight, moveLeft) {\r\n  if (moveRight || moveLeft) return \" change-img-opacity\";\r\n\r\n  return \"\";\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Carousel.css\";\r\nimport {\r\n  getMoveCssClass,\r\n  disableButtonLeft,\r\n  disableButtonRight,\r\n  changeImg,\r\n} from \"./CarouselUtils\";\r\n\r\nclass Carousel extends Component {\r\n  state = {\r\n    movies: [],\r\n    displayMovies: [],\r\n    moveRight: false,\r\n    moveLeft: false,\r\n    movieIndex: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://movies-app-siit.herokuapp.com/movies?take=1000\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        //console.log(json);\r\n        const totalMovies = json.results.filter((movie) => movie.Poster);\r\n        this.setState({\r\n          movies: totalMovies,\r\n          displayMovies: totalMovies.slice(0, 5),\r\n        });\r\n      });\r\n  }\r\n  moveRight = () => {\r\n    this.setState({ moveRight: true });\r\n    setTimeout(() => {\r\n      const newIndex = this.state.movieIndex + 1;\r\n      this.setState({\r\n        movieIndex: newIndex,\r\n        displayMovies: this.state.movies.slice(newIndex, newIndex + 5),\r\n        moveRight: false,\r\n      });\r\n    }, 500);\r\n  };\r\n  moveLeft = () => {\r\n    this.setState({ moveLeft: true });\r\n    setTimeout(() => {\r\n      const newIndex = this.state.movieIndex - 1;\r\n      this.setState({\r\n        movieIndex: newIndex,\r\n        displayMovies: this.state.movies.slice(newIndex, newIndex + 5),\r\n        moveLeft: false,\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    let imgBackgroundUrl =\r\n      this.state.movies[this.state.movieIndex] &&\r\n      this.state.movies[this.state.movieIndex].Poster;\r\n    return (\r\n      <div className=\"custom-carousel-container-background\">\r\n        <img\r\n          className={`custom-carousel-background${changeImg(\r\n            this.state.moveRight,\r\n            this.state.moveLeft\r\n          )}`}\r\n          src={imgBackgroundUrl}\r\n          alt=\"\"\r\n        />\r\n        <div\r\n          style={{ backgroundImage: `url(${this.state.displayMovies[0]})` }}\r\n          className=\"custom-carousel-container\"\r\n        >\r\n          <div className=\"custom-carousel-title text-light\">\r\n            <h1>What to watch</h1>\r\n            <div className=\"custom-carousel-nav\">\r\n              <p\r\n                className={`custom-carousel-nav-left${disableButtonLeft(\r\n                  this.state.movieIndex,\r\n                  this.state.movies\r\n                )}`}\r\n                onClick={this.moveLeft}\r\n              >\r\n                {\"<\"}\r\n              </p>\r\n              <p\r\n                className={`custom-carousel-nav-right${disableButtonRight(\r\n                  this.state.movieIndex,\r\n                  this.state.movies\r\n                )}`}\r\n                onClick={this.moveRight}\r\n              >\r\n                {\">\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-carousel-item-display\">\r\n            <div\r\n              className={`custom-carousel-item-container${getMoveCssClass(\r\n                this.state.moveRight,\r\n                this.state.moveLeft\r\n              )}`}\r\n            >\r\n              {this.state.displayMovies.map((item) => (\r\n                <div key={item._id} className=\"custom-carousel-item\">\r\n                  <img\r\n                    src={item.Poster}\r\n                    className=\"custom-carousel-item-img\"\r\n                    alt=\"\"\r\n                  ></img>\r\n                  <p className=\"custom-carousel-item-title\">{item.Title}</p>\r\n                  <p className=\"custom-carousel-item-genre\">{item.Genre}</p>\r\n                  <p className=\"custom-carousel-item-rating\">\r\n                    {item.imdbRating}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../../components/Footer\";\r\nimport HomeContent from \"./HomeContent\";\r\nimport Carousel from \"./Carousel.jsx\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport \"./HomePage.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Carousel />\r\n        <HomeContent />\r\n        {/* <ContactForm /> */}\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./ContactForm.css\";\r\nclass ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"custom-contact-section pb-4 text-light\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mt-4 mb-2\">\r\n              <h2 className=\"mt-2 \">Get in touch</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <form\r\n            id=\"contact-form\"\r\n            onSubmit={this.handleSubmit.bind(this)}\r\n            method=\"POST\"\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"name\">Your Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.name}\r\n                  onChange={this.onNameChange.bind(this)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"exampleInputEmail1\">E-mail address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={this.state.email}\r\n                  onChange={this.onEmailChange.bind(this)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"message\">Message</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows=\"3\"\r\n                value={this.state.message}\r\n                onChange={this.onMessageChange.bind(this)}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn sign-in-btn\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onNameChange(event) {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  onEmailChange(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  onMessageChange(event) {\r\n    this.setState({ message: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {}\r\n}\r\n\r\nexport default ContactForm;\r\n","export function generateUrl() {\r\n    return 'https://movies-app-siit.herokuapp.com/movies'\r\n}\r\nexport function fetchMovies(url = generateUrl()) {\r\n    // const uri = generateUrl();\r\n  \r\n    return fetch(url).then(response => response.json());\r\n    \r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\nimport \"./willPaginate.css\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class WillPaginate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: this.props.currentPage\r\n      \r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({ currentPage }) {\r\n    this.setState({ ...this.state, currentPage })\r\n  }\r\n\r\n  handlePageChange(pageNumber) {\r\n    this.setState({ currentPage: pageNumber})\r\n    this.props.parentFetch(this.props.inputContent, this.props.newValue, pageNumber === 1 ? 0 : (pageNumber * 10 - 10));\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        \r\n        <Pagination \r\n          allPagesCount={this.state.allPagesCount}\r\n          activePage={this.state.currentPage}\r\n          totalItemsCount={this.props.totalItemsCount}\r\n          onChange={this.handlePageChange.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n// import {HandleDetailsButtonClick} from \"./MovieDetailsUtils\"; \r\n\r\n// import { browserHistory } from \"react-router\"; \r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\r\nimport \"./SearchPage.css\";\r\nimport \"./MovieBox.css\";\r\n\r\n\r\nclass MovieBox extends Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <div className='content-container-movies' >\r\n            <p className='movie-title'>{this.props.movie_details.Title}</p>\r\n            <img className='image-container-movies' src={this.props.movie_details.Poster}></img>\r\n            <p className='movie-genre'><span className='genre-header'>Genre: </span>{this.props.movie_details.Genre}</p>\r\n            <p className='movie-year'>{this.props.movie_details.Year}</p>\r\n            <div className='movie-info-headers'>\r\n                <p className='first-paragraph'>Language: </p>\r\n                <p className='second-paragraph'>Country: </p>\r\n                <p className='third-paragraph'>Runtime: </p>\r\n            </div>\r\n            <div className='all-movie-info'>\r\n                <p className='movie-language'>{this.props.movie_details.Language}</p>\r\n                <p className='movie-country'>{this.props.movie_details.Country}</p>\r\n                <p className='movie-runtime'>{this.props.movie_details.Runtime}</p>\r\n            </div>\r\n            <p className='movie-raiting-number'><span className=\"fa fa-star checked\"></span>{this.props.movie_details.imdbRating}</p>\r\n            {/* <p className='raiting-number'><span className=\"fa fa-star checked\">\r\n            </span>{this.props.movie_details.imdbRating}</p> */}\r\n            <div className=\"containerButtonMovieDetails\">\r\n                <Link to={\"/movie-details?id=\" + this.props.movie_details._id}><button className=\"buttonMovieDetails\">View Details</button></Link>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default MovieBox;\r\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport './GenreFilter.css'\r\n\r\n\r\n\r\n\r\nconst options = [\r\n  { value: 'adventure', label: 'Adventure' },\r\n  { value: 'action', label: 'Action' },\r\n  { value: 'animation', label: 'Animation' },\r\n  { value: 'comedy', label: 'Comedy' },\r\n  { value: 'crime', label: 'Crime' },\r\n  { value: 'drama', label: 'Drama' },\r\n  { value: 'family', label: 'Family' },\r\n  { value: 'fantasy', label: 'Fantasy' },\r\n  { value: 'horror', label: 'Horror' },\r\n  { value: 'romance', label: 'Romance' },\r\n  { value: 'sci-fi', label: 'Sci-Fi' },\r\n  { value: 'thriller', label: 'Thriller' },\r\n  { value: 'western', label: 'Western' }\r\n];\r\nconst customStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    color: state.selectProps.menuColor,\r\n    borderBottom: '1px dotted black',\r\n    // color: state.isSelected ? 'red' : 'blue',\r\n\r\n\r\n    padding: 20,\r\n    height: 10,\r\n\r\n  }),\r\n  input: styles => ({\r\n    ...styles,\r\n  }),\r\n}\r\n\r\nclass Genre extends Component {\r\n\r\n\r\n  handleChange = (selectedGenre) => {\r\n\r\n    this.props.onFilterChange(selectedGenre);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { selectedGenre } = this.props;\r\n\r\n    return (\r\n      <div className=\"genre-container\">\r\n        <Select\r\n          value={selectedGenre}\r\n          placeholder=\"Select a genre\"\r\n          onChange={this.handleChange}\r\n          options={options}\r\n          styles={customStyles}\r\n\r\n        />\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Genre;","import React, { Component } from 'react';\r\nimport './YearFilter.css'\r\n\r\nclass Year extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"year-container\">\r\n                <input className=\"input-year\" value={this.props.yearInput} placeholder=\"Enter a year\" onChange={this.props.onYearChange}></input>\r\n            </div >\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Year;","import React, { Component } from 'react';\r\nimport './SearchFilter.css';\r\n\r\n\r\nclass SearchFilter extends Component {\r\n\r\n    handleOnChange = (event) => {\r\n        this.props.updateInputValue(event.target.value)\r\n    }\r\n\r\n    handleOnEnther = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.props.onSearchFilter(this.props.titleInput);\r\n\r\n        }\r\n    }\r\n    handleOnclick = () => {\r\n        this.props.onSearchFilter(this.props.titleInput);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"input-container\">\r\n                <input className=\"search-input\" type=\"text\" value={this.props.titleInput} placeholder=\"Enter a movie title\" onChange={this.handleOnChange} onKeyDown={this.handleOnEnther}></input>\r\n                <i className=\"fa fa-search search-icon\" aria-hidden=\"true\" onClick={this.handleOnclick}></i>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SearchFilter;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./LanguageFilter.css\"\r\n\r\n\r\nconst options = [\r\n    { value: 'English', label: 'English' },\r\n    // { value: 'Mandarin', label: 'Mandarin' },\r\n    { value: 'French', label: 'French' },\r\n    { value: 'Spanish', label: 'Spanish' },\r\n    { value: 'Japanese', label: 'Japanese' },\r\n    // { value: 'Portuguese', label: 'Portuguese' },\r\n    // { value: 'Thai', label: 'Thai' },\r\n    // { value: 'Esperanto', label: 'Esperanto' },\r\n    { value: 'German', label: 'German' },\r\n    { value: 'Italian', label: 'Italian' },\r\n    { value: 'Romanian', label: 'Romanian' },\r\n    // { value: 'Filipino', label: 'Filipino' },\r\n    // { value: 'Tagalog', label: 'Tagalog' }\r\n];\r\nconst customStyles = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted black',\r\n        // color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n        height: 10,\r\n    }),\r\n    input: styles => ({\r\n        ...styles,\r\n    }),\r\n}\r\n\r\nclass Language extends Component {\r\n\r\n\r\n    handleChange = (selectedLanguage) => {\r\n\r\n        this.props.onLanguageChange(selectedLanguage);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { selectedLanguage } = this.props;\r\n\r\n        return (\r\n            <div className=\"language-container\">\r\n                <Select\r\n                    value={selectedLanguage}\r\n                    placeholder=\"Select a language\"\r\n                    onChange={this.handleChange}\r\n                    options={options}\r\n                    styles={customStyles}\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Language;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./CountryFilter.css\"\r\n\r\n\r\nconst options = [\r\n    { value: 'Canada', label: 'Canada' },\r\n    // { value: 'Philippines', label: 'Philippines' },\r\n    { value: 'Romania', label: 'Romania' },\r\n    { value: 'UK', label: 'UK' },\r\n    { value: 'USA', label: 'USA' },\r\n    { value: 'Germany', label: 'Germany' },\r\n    // { value: 'Japan', label: 'Japan' },\r\n\r\n    // { value: 'South Korea', label: 'South Korea' },\r\n\r\n    // { value: 'Denmark', label: 'Denmark' },\r\n\r\n];\r\nconst customStyles = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted black',\r\n        // color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n        height: 10,\r\n    }),\r\n    input: styles => ({\r\n        ...styles,\r\n    }),\r\n}\r\n\r\nclass Country extends Component {\r\n\r\n\r\n    handleChange = (selectedCountry) => {\r\n\r\n        this.props.onCountryChange(selectedCountry);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { selectedCountry } = this.props;\r\n\r\n        return (\r\n            <div className=\"country-container\">\r\n                <Select\r\n                    value={selectedCountry}\r\n                    placeholder=\"Select a country\"\r\n                    onChange={this.handleChange}\r\n                    options={options}\r\n                    styles={customStyles}\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Country;","import React, { Component } from 'react';\r\nimport './RuntimeFilter.css'\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\n\r\nexport class RuntimeFilter extends Component {\r\n\r\n    handleOnChange = (value) => {\r\n        this.props.updateRuntimeValue(value);\r\n    }\r\n    render() {\r\n        const { runtimeValue } = this.props;\r\n\r\n        return (\r\n            <div className=\"runtime-container\" onMouseUp={() => { this.props.onRuntimeChange(runtimeValue) }}>\r\n                <p>Movie runtime</p>\r\n                <RangeSlider\r\n                    value={runtimeValue}\r\n                    onChange={changeEvent => this.handleOnChange(changeEvent.target.value)}\r\n                    max={300}\r\n                    variant='danger'\r\n\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './RuntimeFilter.css'\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport './ImdbRatingFilter.css'\r\n\r\n\r\nexport class ImdbRatingFilter extends Component {\r\n\r\n    handleOnChange = (value) => {\r\n        this.props.updateImdbRatingValue(value);\r\n    }\r\n    render() {\r\n\r\n        const { imdbRatingValue } = this.props;\r\n\r\n        return (\r\n            <div className=\"rating-container\" onMouseUp={() => { this.props.onImdbRatingChange(imdbRatingValue) }}>\r\n                <p>Rating</p>\r\n                <RangeSlider\r\n                    value={imdbRatingValue}\r\n                    onChange={changeEvent => this.handleOnChange(changeEvent.target.value)}\r\n                    max={10}\r\n                    step={0.1}\r\n                    variant='danger'\r\n\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n","// export function dictToURL(dict) {\r\n//     let str = [];\r\n//     for (let p in dict) {\r\n//         if (dict[p] !== '') { // If value of a key is not empty, push the key and the value to the string\r\n//             str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(dict[p]));\r\n//         }\r\n//     }\r\n//     let url = 'https://movies-api-siit.herokuapp.com/movies?';\r\n//     let final_url = url + str.join(\"&\");\r\n//     return final_url\r\n// }\r\n\r\nexport function generateUrl(filters) {\r\n    let url = 'https://movies-app-siit.herokuapp.com/movies';\r\n\r\n    const searchQuery = Object.keys(filters).reduce((acc, key) => {\r\n        const filterValue = filters[key];\r\n        if (filterValue) {\r\n            acc.push(`${key}=${filterValue}`);\r\n\r\n        }\r\n        return acc;\r\n    }, []).join('&');\r\n    if (searchQuery) {\r\n        url = url + '?' + searchQuery;\r\n    }\r\n    console.log(url);\r\n    return url;\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { fetchMovies } from \"./FetchMovies.js\";\r\nimport \"./SearchPage.css\";\r\nimport WillPaginate from \"./WillPaginate.js\";\r\nimport MovieBox from \"./MovieBox.js\";\r\nimport Genre from \"./GenreFilter.js\";\r\nimport Year from \"./YearFilter.js\";\r\nimport SearchFilter from \"./SearchFilter.js\";\r\nimport Language from \"./LanguageFilter.js\";\r\nimport Country from \"./CountryFilter.js\";\r\nimport { RuntimeFilter } from \"./RuntimeFilter.js\";\r\nimport { ImdbRatingFilter } from \"./ImdbRatingFilter.js\";\r\nimport { generateUrl } from \"./SearchPageUtils\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedGenre: null,\r\n      selectedLanguage: null,\r\n      selectedCountry: null,\r\n      inputContent: \"\",\r\n      inputYearContent: \"\",\r\n      titleInput: \"\",\r\n      runtimeValue: 0,\r\n      imdbRatingValue: 0,\r\n      movies: [],\r\n      isLoaded: false,\r\n      loading: false,\r\n      message: \"\",\r\n      pageCount: 0,\r\n      currentPage: 0,\r\n      totalItemsCount: 0,\r\n      allPagesCount: 0,\r\n      active: false,\r\n      filters: {\r\n        Title: \"\",\r\n        Genre: \"\",\r\n        Year: \"\",\r\n        Language: \"\",\r\n        Country: \"\",\r\n        Runtime: \"\",\r\n        imdbRating: \"\",\r\n        skip: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  resetAllFilters = () => {\r\n    this.setState(\r\n      {\r\n        selectedGenre: null,\r\n        selectedLanguage: null,\r\n        selectedCountry: null,\r\n        inputYearContent: \"\",\r\n        inputContent: \"\",\r\n        runtimeValue: 0,\r\n        imdbRatingValue: 0,\r\n        active: true,\r\n        filters: {\r\n          Title: \"\",\r\n          Genre: \"\",\r\n          Year: \"\",\r\n          Language: \"\",\r\n          Country: \"\",\r\n          Runtime: \"\",\r\n          imdbRating: \"\",\r\n        },\r\n      },\r\n      () => {\r\n        console.log(\"resetare filtre\", this.state);\r\n\r\n        const url = generateUrl(this.state.filters);\r\n        fetchMovies(url).then((json) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: json.results,\r\n            pageCount: json.pagination.numberOfPages,\r\n            currentPage: json.pagination.currentPage,\r\n            totalItemsCount:\r\n              json.results.length * json.pagination.numberOfPages,\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  //Updates dictionary valyes with selected options\r\n  updateDictionary = (filterOption, newValue, skip = \"\") => {\r\n    //Update dictionary\r\n    this.setState(\r\n      (prevState) => {\r\n        // Taking a copy of the initial filters obj\r\n        const { filters } = prevState;\r\n        // Updating it's property as per the key, value pair retrieved (key being the filter, value being \"on\" or \"off\")\r\n        filters[filterOption] = newValue;\r\n        filters[\"skip\"] = skip;\r\n        // Returning the updated object\r\n        console.log(filters);\r\n        return { filters };\r\n      },\r\n      // Since setState is async, all operations that require the updated state, should be done here\r\n      () => {\r\n        console.log(\"1.Dictionar updatat\");\r\n        console.log(this.state.filters);\r\n        console.log(\"logo\");\r\n\r\n        //Generates the url after the dictionary was updated\r\n        let url = generateUrl(this.state.filters);\r\n\r\n        console.log(\"url\", url);\r\n        //Fetch movies based on the new url (which contains selected filters)\r\n        fetchMovies(url).then((json) => {\r\n          console.log(\"3.Results after search\", json);\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: json.results,\r\n            pageCount: json.pagination.numberOfPages,\r\n            currentPage: json.pagination.currentPage,\r\n            totalItemsCount:\r\n              json.results.length * json.pagination.numberOfPages,\r\n            allPagesCount: json.pagination.numberOfPages,\r\n            active: false,\r\n          });\r\n          console.log(\"all pages\", this.state.allPagesCount);\r\n          // if ( this.state.allPagesCount=== 0) {\r\n          //   console.log(\"no results\");\r\n          //   };\r\n        });\r\n        if (skip === \"\") {\r\n          this.setState({\r\n            currentPage: 1,\r\n          });\r\n          console.log(\"this.state.currentPage\", this.state.currentPage);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOnSearchChangeValue = (inputValue) => {\r\n    this.setState({\r\n      inputContent: inputValue,\r\n    });\r\n  };\r\n\r\n  handleOnSearchChange = (inputValue) => {\r\n    this.setState({ inputContent: inputValue, loading: true });\r\n\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Title\", inputValue);\r\n  };\r\n\r\n  handleGenreChange = (selectedGenre) => {\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Genre\", selectedGenre.value);\r\n    this.setState({ selectedGenre });\r\n  };\r\n\r\n  handleYearChange = (event) => {\r\n    const query = event.target.value;\r\n    this.setState({ inputYearContent: query, loading: true });\r\n\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Year\", query);\r\n  };\r\n\r\n  handleLanguageChange = (selectedLanguage) => {\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Language\", selectedLanguage.value);\r\n    this.setState({ selectedLanguage });\r\n  };\r\n\r\n  handleCountryChange = (selectedCountry) => {\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Country\", selectedCountry.value);\r\n    this.setState({ selectedCountry });\r\n  };\r\n\r\n  handleRuntimeChangeValue = (runtimeValue) => {\r\n    this.setState({\r\n      runtimeValue,\r\n    });\r\n  };\r\n\r\n  handleRuntimeChange = (changeEvent) => {\r\n    let selectedRuntime = changeEvent + \" min\";\r\n\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"Runtime\", selectedRuntime);\r\n  };\r\n\r\n  handleImdbRantingChangeValue = (imdbRatingValue) => {\r\n    this.setState({\r\n      imdbRatingValue,\r\n    });\r\n  };\r\n  handleImdbRatingChange = (changeEvent) => {\r\n    //Update dictionary with custom filters\r\n    this.updateDictionary(\"imdbRating\", changeEvent);\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n\r\n    fetchMovies().then((json) => {\r\n      console.log(json);\r\n\r\n      this.setState({\r\n        isLoaded: true,\r\n        movies: json.results,\r\n        pageCount: json.pagination.numberOfPages,\r\n        currentPage: json.pagination.currentPage,\r\n        totalItemsCount: json.results.length * json.pagination.numberOfPages,\r\n        allPagesCount: json.pagination.numberOfPages,\r\n      });\r\n    });\r\n  }\r\n  toggleClass() {\r\n    const currentState = this.state.active;\r\n    this.setState({ active: !currentState });\r\n  }\r\n\r\n  render() {\r\n    const { isLoaded, movies } = this.state;\r\n    const { allPagesCount } = this.state;\r\n\r\n    // if ( this.state.allPagesCount=== 0) {\r\n    //   return <div><WillPaginate /></div>\r\n    //   console.log(\"no results\");\r\n    //   };\r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"search-page-container\">\r\n          <SearchFilter\r\n            titleInput={this.state.inputContent}\r\n            onSearchFilter={this.handleOnSearchChange}\r\n            updateInputValue={this.handleOnSearchChangeValue}\r\n          />\r\n          <div className=\"content\">\r\n            <div className=\"filters-container\">\r\n              <Genre\r\n                onFilterChange={this.handleGenreChange}\r\n                selectedGenre={this.state.selectedGenre}\r\n              />\r\n              <Year\r\n                onYearChange={this.handleYearChange}\r\n                yearInput={this.state.inputYearContent}\r\n              />\r\n              <Language\r\n                onLanguageChange={this.handleLanguageChange}\r\n                selectedLanguage={this.state.selectedLanguage}\r\n              />\r\n              <Country\r\n                onCountryChange={this.handleCountryChange}\r\n                selectedCountry={this.state.selectedCountry}\r\n              />\r\n              <RuntimeFilter\r\n                onRuntimeChange={this.handleRuntimeChange}\r\n                runtimeValue={this.state.runtimeValue}\r\n                updateRuntimeValue={this.handleRuntimeChangeValue}\r\n              />\r\n              <ImdbRatingFilter\r\n                onImdbRatingChange={this.handleImdbRatingChange}\r\n                imdbRatingValue={this.state.imdbRatingValue}\r\n                updateImdbRatingValue={this.handleImdbRantingChangeValue}\r\n              />\r\n              <button\r\n                className=\"button-reset-all-filters\"\r\n                onClick={this.resetAllFilters}\r\n              >\r\n                Reset all filters\r\n              </button>\r\n            </div>\r\n            {/* <div className=\"moviePaginationContainer\"> */}\r\n            <div className=\"all-movies-container\">\r\n              <div className=\"noResults\">\r\n                {this.state.allPagesCount === 0 &&\r\n                this.state.active === false ? (\r\n                  <p>No Search Results</p>\r\n                ) : null}\r\n              </div>\r\n              {movies.map((movie, index) => (\r\n                <MovieBox\r\n                  movie_details={movie}\r\n                  movie_index={index}\r\n                  key={movie._id}\r\n                />\r\n              ))}\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n          <div className=\"paginationContainer row\">\r\n            <WillPaginate\r\n              parentFetch={this.updateDictionary}\r\n              pageCount={this.state.pageCount}\r\n              currentPage={this.state.currentPage}\r\n              totalItemsCount={this.state.totalItemsCount}\r\n              inputContent={this.state.inputContent}\r\n              newValue={this.state.newValue}\r\n              allPagesCount={this.state.allPagesCount}\r\n            ></WillPaginate>\r\n          </div>\r\n          <div className=\"Footer\">\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { fetchMovies, generateUrl } from \"../SearchPage/FetchMovies\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport Footer from \"../../components/Footer\";\r\nimport \"./MovieDetails.css\";\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    movie:{},\r\n    link: \"https://www.youtube.com/results?search_query=\",\r\n    \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const search= this.props.location.search;\r\n    console.log(search);\r\n    const [_,id] = search.split(\"=\");\r\n    console.log(id);\r\n    \r\n\r\n    fetchMovies(generateUrl() +`/${id}`).then(json  => {\r\n      this.setState({movie:json})\r\n      const rightLink = this.state.link + this.state.movie.Title;\r\n      console.log(rightLink);\r\n    })\r\n  }\r\n  \r\n \r\n\r\n  render(){\r\n    const {movie} = this.state;\r\n    const {link} = this.state;\r\n    return (\r\n        <div className=\"MovieContainer\">\r\n          <div className=\"descriptionContainer\">\r\n          <div className=\"imageContainer\">\r\n          <img  className=\"MovieImage\" src = {movie.Poster} alt=\"text\"  ></img>\r\n          </div>\r\n          <div className=\"descriprionContainer\">\r\n            <div className=\"movieTitleContainer\">\r\n              <p className=\"MovieTitle\">{movie.Title} </p>\r\n            </div>\r\n            <div className=\"movieInfoContainer\">\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\">Year:</p> \r\n                  <p>{movie.Year}</p>\r\n                 </div>\r\n                <div className=\"MovieInfo\"> \r\n                  <p className=\"TitileInfo\">Run Time:</p>   \r\n                  <p>{movie.Runtime}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\"> \r\n                  <p className=\"TitileInfo\">Genre:</p> \r\n                  <p>{movie.Genre}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\">Language: </p>\r\n                  <p>{movie.Language}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\">Country:</p>\r\n                  <p>{movie.Country}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\"> IMDb Rating:</p>\r\n                  <p>{movie.imdbRating}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\">IMDb Votes:</p> \r\n                  <p>{movie.imdbVotes}</p>\r\n                </div>\r\n                <div className=\"MovieInfo\">\r\n                  <p className=\"TitileInfo\">IMDb ID:  </p>\r\n                  <p>{movie.imdbID}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"buttonsDetailsPage\">\r\n            <div className=\"GoBackButtonContainer\">\r\n            <Link to ={\"/search-movie\"}><button className=\"goBackButton\">Go Back</button></Link>\r\n            </div>\r\n            <div className=\"YouTubeButtonContainer\">\r\n            <p>Go to YouTube here</p>\r\n            <a href = {link} target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"youtube social DetailsLink\"\r\n              >\r\n                {/* <button className=\"goBackButton\">Go to YouTube</button> */}\r\n                <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\r\n             </a>\r\n            </div>\r\n            \r\n              \r\n            </div>\r\n          \r\n          </div>\r\n          </div>\r\n\r\n          \r\n\r\n          <div className=\"Footer\">\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n  }\r\nexport default Details; ","import React, { Component } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport Footer from \"../Footer\";\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    signUpUsername: \"\",\r\n    signUpPassword: \"\",\r\n    logInUsername: \"\",\r\n    logInPassword: \"\",\r\n    signUpMessage: \"\",\r\n    logInMessage: \"\",\r\n    formState: \"signIn\",\r\n    authtenticationState: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (document.cookie.startsWith(\"token=\")) {\r\n      this.setState({ authtenticationState: true });\r\n    }\r\n  }\r\n\r\n  onSubmitSignUp = (data) => {\r\n    this.setState({\r\n      signUpUsername: \"\",\r\n      signUpPassword: \"\",\r\n      signUpMessage: data.message,\r\n    });\r\n  };\r\n\r\n  onSubmitLogIn = (data) => {\r\n    this.setState({\r\n      logInUsername: \"\",\r\n      logInPassword: \"\",\r\n      logInMessage: data.message,\r\n    });\r\n  };\r\n\r\n  handleChangeFormState = (formState) => {\r\n    this.setState({\r\n      formState,\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  redirectOnAuthtentication = (resp) => {\r\n    document.cookie = `token=${resp.accessToken}`;\r\n    this.props.history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n\r\n  handleSubmitSignUp = (event) => {\r\n    fetch(\"https://movies-app-siit.herokuapp.com/auth/register\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify({\r\n        username: this.state.signUpUsername,\r\n        password: this.state.signUpPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        json.authenticated === true\r\n          ? this.redirectOnAuthtentication(json)\r\n          : this.onSubmitSignUp(json);\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleSubmitLogIn = (event) => {\r\n    fetch(\"https://movies-app-siit.herokuapp.com/auth/login\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify({\r\n        username: this.state.logInUsername,\r\n        password: this.state.logInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        json.authenticated === true\r\n          ? this.redirectOnAuthtentication(json)\r\n          : this.onSubmitLogIn(json);\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"authFormBody\">\r\n        <div\r\n          className={\r\n            \"authFormContainer\" +\r\n            (this.state.formState === \"signUp\" ? \" right-panel-active\" : \"\")\r\n          }\r\n          id=\"container\"\r\n        >\r\n          <div className=\"form-container sign-up-container\">\r\n            <form className=\"register-form\" onSubmit={this.handleSubmitSignUp}>\r\n              <h1 className=\"titles\">Create Account</h1>\r\n              <input\r\n                className=\"register-input\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"signUpUsername\"\r\n                value={this.state.signUpUsername}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <input\r\n                className=\"register-input\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"signUpPassword\"\r\n                value={this.state.signUpPassword}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <p className=\"response-message\">{this.state.signUpMessage}</p>\r\n              <button className=\"LogIn-buttons\">Sign Up</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"form-container sign-in-container\">\r\n            <form className=\"register-form\" onSubmit={this.handleSubmitLogIn}>\r\n              {this.state.authtenticationState === false ? (\r\n                <>\r\n                  <h1 className=\"titles\">Sign In</h1>\r\n                  <input\r\n                    className=\"register-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"logInUsername\"\r\n                    value={this.state.logInUsername}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"register-input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"logInPassword\"\r\n                    value={this.state.logInPassword}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                  <p className=\"response-message\">{this.state.logInMessage}</p>\r\n                  <button className=\"LogIn-buttons\">Sign In</button>\r\n                </>\r\n              ) : (\r\n                <h1>You are already logged in! </h1>\r\n              )}\r\n            </form>\r\n          </div>\r\n\r\n          {/* This is the overlay content. */}\r\n\r\n          <div className=\"overlay-container\">\r\n            <div className=\"overlay\">\r\n              <div className=\"overlay-panel overlay-left\">\r\n                <h1 className=\"titles\">Welcome Back</h1>\r\n                <p className=\"message-paragraph\">\r\n                  To keep connected with us please login with your personal info\r\n                </p>\r\n                <button\r\n                  className=\"LogIn-buttons ghost\"\r\n                  id=\"signIn\"\r\n                  onClick={() => this.handleChangeFormState(\"singIn\")}\r\n                >\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n              <div className=\"overlay-panel overlay-right\">\r\n                <h1 className=\"titles\">Hello, Friend!</h1>\r\n                <p className=\"message-paragraph\">\r\n                  Enter your personal details and start journey with us\r\n                </p>\r\n                <button\r\n                  className=\"LogIn-buttons ghost\"\r\n                  id=\"signUp\"\r\n                  onClick={() => this.handleChangeFormState(\"signUp\")}\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Footer\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","export default function addMovie(data) {\r\n  const token = document.cookie\r\n    .split(\";\")\r\n    .find((element) => {\r\n      if (element.includes(\"token\")) return true;\r\n    })\r\n    .split(\"=\")[1];\r\n\r\n  fetch(`https://movies-app-siit.herokuapp.com/movies`, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Auth-Token\": token,\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      console.log(json);\r\n    });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport Footer from \"../../components/Footer\";\r\nimport \"./AddPage.css\";\r\nimport addMovie from \"./AddPageUtils.js\";\r\n\r\nclass Add extends Component {\r\n  state = {\r\n    Title: \"\",\r\n    Year: \"\",\r\n    Genre: \"\",\r\n    Poster: \"\",\r\n    Country: \"\",\r\n    Language: \"\",\r\n    Runtime: \"\",\r\n    ImdbVotes: \"\",\r\n    ImdbRating: \"\",\r\n    imdbID: \"\",\r\n    Type: \"\",\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // event.target.className += \" was-validated\";\r\n    let data = this.createData();\r\n    addMovie(data);\r\n    this.setState({\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Genre: \"\",\r\n      Poster: \"\",\r\n      Country: \"\",\r\n      Language: \"\",\r\n      Runtime: \"\",\r\n      ImdbVotes: \"\",\r\n      ImdbRating: \"\",\r\n      imdbID: \"\",\r\n      Type: \"\",\r\n    });\r\n  };\r\n\r\n  createData = () => {\r\n    let data = {\r\n      Title: this.state.Title,\r\n      Country: this.state.Country,\r\n      Year: this.state.Year,\r\n      Genre: this.state.Genre,\r\n      Language: this.state.Language,\r\n      Runtime: this.state.Runtime,\r\n      ImdbVotes: this.state.ImdbVotes,\r\n      ImdbRating: this.state.ImdbRating,\r\n      Poster: this.state.Poster,\r\n      imdbID: this.state.imdbID,\r\n      Type: this.state.Type,\r\n    };\r\n\r\n    return data;\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AllPage\">\r\n        <div className=\"container\">\r\n          <form className=\"needs-validation\" onSubmit={this.submitHandler}>\r\n            <div className=\"container-row\">\r\n              <MDBRow>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegistertitle\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Movie title :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Title}\r\n                    name=\"Title\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegistertitle\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Movie title\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterImdbID\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Imdb ID title :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.imdbID}\r\n                    name=\"imdbID\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegisterImdbID\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"ImdbID\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n            <div className=\"container-row\">\r\n              <MDBRow>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegistergenre\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Genre :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Genre}\r\n                    name=\"Genre\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegistergenre\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Genre\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisteryear\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Year :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Year}\r\n                    name=\"Year\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"number\"\r\n                    id=\"defaultFormRegisterYear\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Year\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegistercountry\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Country :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Country}\r\n                    name=\"Country\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegisterCountry\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Country\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n            <div className=\"container-row\">\r\n              <MDBRow>\r\n                <MDBCol md=\"8\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterPoster\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Poster URL :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Poster}\r\n                    name=\"Poster\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegisterPoster\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Poster URL\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterType\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Type :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Type}\r\n                    name=\"Type\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegisterType\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n            <div className=\"container-row\">\r\n              <MDBRow>\r\n                <MDBCol md=\"3\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterLanguage\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Language :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Language}\r\n                    name=\"Language\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"text\"\r\n                    id=\"defaultFormRegisterLanguage\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Language\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"3\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterRuntime\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Runtime :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.Runtime}\r\n                    name=\"Runtime\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"number\"\r\n                    id=\"defaultFormRegisterRuntime\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Runtime\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"3\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterImdbVotes\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Imdb Votes :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.ImdbVotes}\r\n                    name=\"ImdbVotes\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"number\"\r\n                    id=\"defaultFormRegisterImdbVotes\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Imdb Votes\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"3\">\r\n                  <label\r\n                    htmlFor=\"defaultFormRegisterImdbRating\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Imdb Rating :\r\n                  </label>\r\n                  <input\r\n                    value={this.state.ImdbRating}\r\n                    name=\"ImdbRating\"\r\n                    onChange={this.changeHandler}\r\n                    type=\"number\"\r\n                    id=\"defaultFormRegisterImdbRating\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Imdb Rating\"\r\n                    required\r\n                  />\r\n                  <div className=\"invalid-feedback\">\r\n                    Please fill out this field.\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n            <div className=\"add-button-container\">\r\n              <MDBBtn color=\"success\" type=\"submit\">\r\n                Add movie\r\n              </MDBBtn>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","export function createMovieDelete(id, token) {\r\n    return fetch('https://movies-app-siit.herokuapp.com/movies/' + id, {\r\n        method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-Auth-Token\": token,\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n\r\n    }\r\n    )\r\n\r\n        .then(res => {\r\n            return res;\r\n        }).catch(err => err);\r\n}","import React, { Component } from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport { createMovieDelete } from './MovieFetchDelete';\r\nimport './DeleteForm.css';\r\n\r\nclass DeleteForm extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    handleDeleteOnClick = () => {\r\n        const token = document.cookie\r\n            .split(\";\")\r\n            .find((element) => {\r\n                if (element.includes(\"token\"))\r\n                    return true;\r\n            })\r\n            .split(\"=\")[1];\r\n\r\n        console.log(this.props.searchedMovieResult['_id']);\r\n        return createMovieDelete(this.props.searchedMovieResult['_id'], token);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='container-poster-delete-page'><img alt='poster' src={this.props.searchedMovieResult['Poster']}></img></div>\r\n                <form\r\n                    className=\"needs-validation\"\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate\r\n                >\r\n                    <div className=\"delete-button-container\">\r\n                        <MDBBtn color=\"success\" type=\"submit\" className='btn btn-light' onClick={this.handleDeleteOnClick} >\r\n                            Delete movie\r\n                    </MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DeleteForm;","import React, { Component } from 'react'\r\nimport ReactSearchBox from 'react-search-box'\r\nimport { fetchMovies } from \"../SearchPage/FetchMovies\";\r\nimport './DeletePage.css';\r\nimport DeleteForm from './DeleteForm';\r\nimport Footer from '../../components/Footer';\r\n\r\nexport default class Delete extends Component {\r\n    state = {\r\n        data: [],\r\n        searchedMovieDictionary: {},\r\n        showForm: false,\r\n    }\r\n\r\n    _onSelect = () => {\r\n        this.setState({\r\n            showForm: true,\r\n        });\r\n\r\n    }\r\n\r\n    returnedMovieObject = () => {\r\n\r\n        for (let movie of this.state.data) {\r\n\r\n            if (movie['value'] === this.state.searchedMovieDictionary.value) {\r\n\r\n                return movie.allInfo;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"mounted\");\r\n\r\n        fetchMovies(`https://movies-app-siit.herokuapp.com/movies?take=100000`).then((json) => {\r\n            console.log(json);\r\n\r\n            let serverData = [];\r\n            json.results.map((movie, index) => serverData.push({ key: index, value: movie.Title, allInfo: movie }))\r\n            console.log(serverData);\r\n\r\n            this.setState({\r\n                data: serverData,\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className=\"allPage\">\r\n                <div className=\"container-delete-page\" >\r\n\r\n                    <div className=\"search-movie-input-container\">\r\n                        <ReactSearchBox\r\n\r\n                            placeholder=\"Search for a movie\"\r\n                            data={data}\r\n                            onSelect={record => {\r\n                                this.setState({ searchedMovieDictionary: record })\r\n                                this._onSelect()\r\n                            }\r\n                            }\r\n                            inputBoxBorderColor='red'\r\n\r\n                            fuseConfigs={{\r\n                                threshold: 0.05,\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n                    {this.state.showForm ? <DeleteForm searchedMovieResult={this.returnedMovieObject()} /> : null}\r\n\r\n                </div>\r\n                <div> <Footer /></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","\r\nexport function createMovieUpdate(id, data, token) {\r\n    return fetch('https://movies-app-siit.herokuapp.com/movies/' + id, {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-Auth-Token\": token,\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(data),\r\n    }\r\n    )\r\n\r\n        .then(res => {\r\n            return res;\r\n        }).catch(err => err);\r\n}","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport \"./EditForm.css\";\r\nimport { createMovieUpdate } from './MovieFetchUpdate';\r\n\r\nclass EditForm extends Component {\r\n\r\n    state = {\r\n        Title: this.props.searchedMovieResult.Title,\r\n        Country: this.props.searchedMovieResult.Country,\r\n        Year: this.props.searchedMovieResult.Year,\r\n        Genre: this.props.searchedMovieResult.Genre,\r\n        Language: this.props.searchedMovieResult.Language,\r\n        Runtime: this.props.searchedMovieResult.Runtime,\r\n        imdbVotes: this.props.searchedMovieResult.imdbVotes,\r\n        imdbRating: this.props.searchedMovieResult.imdbRating,\r\n        Poster: this.props.searchedMovieResult.Poster,\r\n        imdbID: this.props.searchedMovieResult.imdbID,\r\n        Type: this.props.searchedMovieResult.Type,\r\n        selectedMovie: this.props.searchedMovieResult,\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleFetchOnClick = () => {\r\n        const token = document.cookie\r\n            .split(\";\")\r\n            .find((element) => {\r\n                if (element.includes(\"token\"))\r\n                    return true;\r\n            })\r\n            .split(\"=\")[1];\r\n        const data = {\r\n            Title: this.state.Title,\r\n            Country: this.state.Country,\r\n            Year: this.state.Year,\r\n            Genre: this.state.Genre,\r\n            Language: this.state.Language,\r\n            Runtime: this.state.Runtime,\r\n            imdbVotes: this.state.imdbVotes,\r\n            imdbRating: this.state.imdbRating,\r\n            Poster: this.state.Poster,\r\n            imdbID: this.state.imdbID,\r\n            Type: this.state.Type,\r\n        };\r\n        console.log(this.state);\r\n        console.log(this.props.searchedMovieResult._id);\r\n        createMovieUpdate(this.props.searchedMovieResult._id, data, token);\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        // If previous movie selected is different from actual movie selected then all inputs will be updated\r\n        // and also the actual movie selected\r\n        if (this.state.selectedMovie !== this.props.searchedMovieResult) {\r\n\r\n            this.setState({\r\n                Title: this.props.searchedMovieResult.Title,\r\n                Country: this.props.searchedMovieResult.Country,\r\n                Year: this.props.searchedMovieResult.Year,\r\n                Genre: this.props.searchedMovieResult.Genre,\r\n                Language: this.props.searchedMovieResult.Language,\r\n                Runtime: this.props.searchedMovieResult.Runtime,\r\n                imdbVotes: this.props.searchedMovieResult.imdbVotes,\r\n                imdbRating: this.props.searchedMovieResult.imdbRating,\r\n                Poster: this.props.searchedMovieResult.Poster,\r\n                imdbID: this.props.searchedMovieResult.imdbID,\r\n                Type: this.props.searchedMovieResult.Type,\r\n                selectedMovie: this.props.searchedMovieResult,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div >\r\n                <form\r\n                    className=\"needs-validation\"\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate\r\n                >\r\n\r\n                    <MDBRow className='title-col-container'>\r\n\r\n                        <MDBCol md=\"4\" >\r\n                            <label\r\n                                htmlFor=\"defaultFormRegistertitle\"\r\n                                className=\"grey-text\"\r\n                            >\r\n                                Movie title :\r\n                            </label>\r\n                            <input\r\n                                value={this.state.Title}\r\n                                name=\"Title\"\r\n                                onChange={this.onChange}\r\n                                type=\"text\"\r\n                                id=\"defaultFormRegistertitle\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Movie title\"\r\n                                required\r\n                            />\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" >\r\n                            <label\r\n                                htmlFor=\"defaultFormRegisterImdbID\"\r\n                                className=\"grey-text\"\r\n                            >\r\n                                Imdb ID :\r\n                            </label>\r\n                            <input\r\n                                value={this.state.imdbID}\r\n                                name=\"imdbID\"\r\n                                onChange={this.onChange}\r\n                                type=\"text\"\r\n                                id=\"defaultFormRegisterImdbID\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Imdb ID\"\r\n                                required\r\n                            />\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n\r\n                        </MDBCol>\r\n\r\n                        <MDBCol>\r\n                            <img alt='poster' src={this.state.Poster} ></img>\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n\r\n\r\n\r\n                    <div className='container-row'>\r\n                        <MDBRow>\r\n                            <MDBCol md=\"4\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegistergenre\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Genre :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Genre}\r\n                                    name=\"Genre\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegistergenre\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Genre\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"4\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisteryear\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Year :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Year}\r\n                                    name=\"Year\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"number\"\r\n                                    id=\"defaultFormRegisterYear\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Year\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"4\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegistercountry\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Country :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Country}\r\n                                    name=\"Country\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterCountry\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Country\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n\r\n                        </MDBRow>\r\n                    </div >\r\n                    <div className='container-row'>\r\n                        <MDBRow>\r\n                            <MDBCol md=\"8\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterPoster\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Poster URL :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Poster}\r\n                                    name=\"Poster\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterPoster\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Poster URL\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"4\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterType\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Type :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Type}\r\n                                    name=\"Type\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterType\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Type\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </div>\r\n                    <div className='container-row'>\r\n                        <MDBRow>\r\n                            <MDBCol md=\"3\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterLanguage\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Language :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Language}\r\n                                    name=\"Language\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterLanguage\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Language\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"3\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterRuntime\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Runtime :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.Runtime}\r\n                                    name=\"Runtime\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterRuntime\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Runtime\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"3\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterImdbVotes\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Imdb Votes :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.imdbVotes}\r\n                                    name=\"imdbVotes\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"text\"\r\n                                    id=\"defaultFormRegisterImdbVotes\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Imdb Votes\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"3\">\r\n                                <label\r\n                                    htmlFor=\"defaultFormRegisterImdbRating\"\r\n                                    className=\"grey-text\"\r\n                                >\r\n                                    Imdb Rating :\r\n                            </label>\r\n                                <input\r\n                                    value={this.state.imdbRating}\r\n                                    name=\"imdbRating\"\r\n                                    onChange={this.onChange}\r\n                                    type=\"number\"\r\n                                    id=\"defaultFormRegisterImdbRating\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Imdb Rating\"\r\n                                    required\r\n                                />\r\n                                <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </div>\r\n                    <div className=\"edit-button-container\">\r\n                        <MDBBtn color=\"success\" type=\"submit\" className='btn btn-light' onClick={this.handleFetchOnClick} >\r\n                            Edit movie\r\n                    </MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditForm;","import React, { Component } from 'react'\r\nimport ReactSearchBox from 'react-search-box'\r\nimport { fetchMovies } from \"../SearchPage/FetchMovies\";\r\nimport './EditMovie.css';\r\nimport EditForm from './EditForm';\r\nimport Footer from '../../components/Footer';\r\n\r\nexport default class EditMovie extends Component {\r\n    state = {\r\n        data: [],\r\n        searchedMovieDictionary: {},\r\n        showForm: false,\r\n    }\r\n\r\n    _onSelect = () => {\r\n        this.setState({\r\n            showForm: true,\r\n        });\r\n\r\n    }\r\n\r\n    returnedMovieObject = () => {\r\n\r\n        for (let movie of this.state.data) {\r\n\r\n            if (movie['value'] === this.state.searchedMovieDictionary.value) {\r\n\r\n                return movie.allInfo;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"mounted\");\r\n\r\n        fetchMovies(`https://movies-app-siit.herokuapp.com/movies?take=100000`).then((json) => {\r\n            console.log(json);\r\n\r\n            let serverData = [];\r\n            json.results.map((movie, index) => serverData.push({ key: index, value: movie.Title, allInfo: movie }))\r\n            console.log(serverData);\r\n\r\n            this.setState({\r\n                data: serverData,\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className=\"allPage\">\r\n                <div className=\"container-edit-page\" >\r\n                    <div className=\"search-movie-input-container\">\r\n                        <ReactSearchBox\r\n                            placeholder=\"Search for a movie\"\r\n                            data={data}\r\n                            onSelect={record => {\r\n                                this.setState({ searchedMovieDictionary: record })\r\n                                this._onSelect()\r\n                            }\r\n                            }\r\n                            fuseConfigs={{\r\n                                threshold: 0.05,\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n                    {this.state.showForm ? <EditForm searchedMovieResult={this.returnedMovieObject()} /> : null}\r\n\r\n                </div>\r\n                <div><Footer /></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./LogIn.css\";\r\n\r\nexport default function LogOutButton() {\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    logOutFunctionality();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <button className=\"LogOutButton\" type=\"button\" onClick={handleClick}>\r\n      LOG OUT\r\n    </button>\r\n  );\r\n}\r\n\r\nconst url = \"https://movies-app-siit.herokuapp.com/auth/logout\";\r\nconst token = document.cookie\r\n  .split(\";\")\r\n  .some((item) => item.trim().startsWith(\"token=\"));\r\n\r\nfunction logOutFunctionality() {\r\n  if (token) {\r\n    fetch(url, {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-Auth-Token\": document.cookie.split(\"=\")[1],\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        document.cookie =\r\n          \"token=; expires=Thu, 13 Sep 1996 00:00:00 UTC; path=/;\";\r\n        window.location.reload();\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport \"./Header.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LogOutButton from \"./LogIn/LogOut.js\";\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    editMovie: \"Editation\",\r\n  };\r\n\r\n  // changeHeader = () => {\r\n  //   let currentUrl = window.location.href;\r\n  //   let currentPage = currentUrl.split(\"/\").slice(-1);\r\n  //   if (currentPage == \"edit\") {\r\n  //     return \"Edit Movie\";\r\n  //   }\r\n  //   if (currentPage == \"add\") {\r\n  //     return \"Add Movie\";\r\n  //   }\r\n  //   if (currentPage == \"delete\") {\r\n  //     return \"Delete Movie\";\r\n  //   } else {\r\n  //     return \"Editation\";\r\n  //   }\r\n  // };\r\n\r\n  // componentDidUpdate() {\r\n  //   const { editMovie } = this.state;\r\n  //   let actualHeader = this.changeHeader();\r\n  //   if (editMovie != actualHeader) {\r\n  //     this.setState({ editMovie: actualHeader }, () => {\r\n  //       console.log(editMovie);\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    let token = document.cookie;\r\n    if (token.includes(\"token\")) {\r\n      this.setState({ isLoggedIn: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"nav\">\r\n        <Navbar.Brand>\r\n          <NavLink exact className=\"nav-link\" to=\"/\">\r\n            <img className=\"logo-nav\" src={require(\"./mr3.PNG\")} />\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link\"\r\n              to=\"/\"\r\n              activeClassName=\"selected\"\r\n              style={{ marginLeft: 20, fontSize: 20 }}\r\n            >\r\n              Home{\" \"}\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link\"\r\n              to=\"/search-movie\"\r\n              activeClassName=\"selected\"\r\n              style={{ marginLeft: 20, fontSize: 20 }}\r\n            >\r\n              Search Movie\r\n            </NavLink>\r\n\r\n            {this.state.isLoggedIn ? (\r\n              <React.Fragment>\r\n                <NavDropdown\r\n                  className=\"nav-link customEditationFlex\"\r\n                  activeClassName=\"selected\"\r\n                  style={{\r\n                    marginLeft: 20,\r\n                    fontSize: 20,\r\n                  }}\r\n                  title={this.state.editMovie}\r\n                  id=\"nav-dropdown\"\r\n                  className=\"nav-dropdown-menu flex-direction-column\"\r\n                >\r\n                  <div className=\"customEditationFlex\">\r\n                    <NavLink exact to=\"/editation/add\">\r\n                      Add Movie\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/editation/delete\">\r\n                      Delete Movie\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/editation/edit\">\r\n                      Edit Movie\r\n                    </NavLink>\r\n                  </div>\r\n                </NavDropdown>\r\n              </React.Fragment>\r\n            ) : null}\r\n\r\n            {this.state.isLoggedIn ? (\r\n              <LogOutButton />\r\n            ) : (\r\n              <NavLink\r\n                exact\r\n                className=\"nav-link\"\r\n                to=\"/login-page\"\r\n                activeClassName=\"selected\"\r\n                style={{ marginLeft: 20, fontSize: 20 }}\r\n              >\r\n                Sign In\r\n              </NavLink>\r\n            )}\r\n          </Nav>\r\n          {this.props.children}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/HomePage/HomePage\";\r\nimport Search from \"./pages/SearchPage/SearchPage\";\r\nimport Details from \"./pages/MoviesDetailsPage/MovieDetailsPage\";\r\n\r\nimport LogIn from \"./components/LogIn/LogIn.js\";\r\n\r\n\r\n// import Edit from \"./pages/EditPage/EditPage\";\r\n\r\nimport Add from \"./pages/EditPage/AddPage\";\r\nimport Delete from \"./pages/EditPage/DeletePage\";\r\nimport EditMovie from \"./pages/EditPage/EditMovie\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navigation from \"./components/Header\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Navigation />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/search-movie\" exact component={Search} />\r\n            <Route path=\"/movie-details\" exact component={Details} />\r\n            <Route path=\"/login-page\" exact component={LogIn} />\r\n            <Route path=\"/editation/add\" exact component={Add} />\r\n            <Route path=\"/editation/edit\" exact component={EditMovie} />\r\n            <Route path=\"/editation/delete\" exact component={Delete} />\r\n\r\n          </Switch>\r\n        </Router>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(\r\n  //wrap our App component with a router\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}